// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.sourcegraph.semanticdb_kotlin/semanticdb.proto

package com.sourcegraph.semanticdb_kotlinc;

public final class Semanticdb {
  private Semanticdb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.sourcegraph.semanticdb_kotlinc.Schema}
   */
  public enum Schema
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEGACY = 0;</code>
     */
    LEGACY(0),
    /**
     * <code>SEMANTICDB3 = 3;</code>
     */
    SEMANTICDB3(3),
    /**
     * <code>SEMANTICDB4 = 4;</code>
     */
    SEMANTICDB4(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LEGACY = 0;</code>
     */
    public static final int LEGACY_VALUE = 0;
    /**
     * <code>SEMANTICDB3 = 3;</code>
     */
    public static final int SEMANTICDB3_VALUE = 3;
    /**
     * <code>SEMANTICDB4 = 4;</code>
     */
    public static final int SEMANTICDB4_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Schema valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Schema forNumber(int value) {
      switch (value) {
        case 0: return LEGACY;
        case 3: return SEMANTICDB3;
        case 4: return SEMANTICDB4;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Schema>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Schema> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Schema>() {
            public Schema findValueByNumber(int number) {
              return Schema.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.getDescriptor().getEnumTypes().get(0);
    }

    private static final Schema[] VALUES = values();

    public static Schema valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Schema(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.sourcegraph.semanticdb_kotlinc.Schema)
  }

  /**
   * Protobuf enum {@code com.sourcegraph.semanticdb_kotlinc.Language}
   */
  public enum Language
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_LANGUAGE = 0;</code>
     */
    UNKNOWN_LANGUAGE(0),
    /**
     * <code>SCALA = 1;</code>
     */
    SCALA(1),
    /**
     * <code>JAVA = 2;</code>
     */
    JAVA(2),
    /**
     * <code>KOTLIN = 3;</code>
     */
    KOTLIN(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_LANGUAGE = 0;</code>
     */
    public static final int UNKNOWN_LANGUAGE_VALUE = 0;
    /**
     * <code>SCALA = 1;</code>
     */
    public static final int SCALA_VALUE = 1;
    /**
     * <code>JAVA = 2;</code>
     */
    public static final int JAVA_VALUE = 2;
    /**
     * <code>KOTLIN = 3;</code>
     */
    public static final int KOTLIN_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Language valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Language forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_LANGUAGE;
        case 1: return SCALA;
        case 2: return JAVA;
        case 3: return KOTLIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Language>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Language> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Language>() {
            public Language findValueByNumber(int number) {
              return Language.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.getDescriptor().getEnumTypes().get(1);
    }

    private static final Language[] VALUES = values();

    public static Language valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Language(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.sourcegraph.semanticdb_kotlinc.Language)
  }

  public interface TextDocumentsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.TextDocuments)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument>
        getDocumentsList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument getDocuments(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    int getDocumentsCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder>
        getDocumentsOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder getDocumentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TextDocuments}
   */
  public static final class TextDocuments extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.TextDocuments)
      TextDocumentsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TextDocuments.newBuilder() to construct.
    private TextDocuments(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextDocuments() {
      documents_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TextDocuments();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TextDocuments(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                documents_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument>();
                mutable_bitField0_ |= 0x00000001;
              }
              documents_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          documents_ = java.util.Collections.unmodifiableList(documents_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments.Builder.class);
    }

    public static final int DOCUMENTS_FIELD_NUMBER = 1;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument> documents_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument> getDocumentsList() {
      return documents_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder>
        getDocumentsOrBuilderList() {
      return documents_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    @java.lang.Override
    public int getDocumentsCount() {
      return documents_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument getDocuments(int index) {
      return documents_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder getDocumentsOrBuilder(
        int index) {
      return documents_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < documents_.size(); i++) {
        output.writeMessage(1, documents_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < documents_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, documents_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments) obj;

      if (!getDocumentsList()
          .equals(other.getDocumentsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDocumentsCount() > 0) {
        hash = (37 * hash) + DOCUMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getDocumentsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TextDocuments}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.TextDocuments)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDocumentsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (documentsBuilder_ == null) {
          documents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          documentsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments(this);
        int from_bitField0_ = bitField0_;
        if (documentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            documents_ = java.util.Collections.unmodifiableList(documents_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.documents_ = documents_;
        } else {
          result.documents_ = documentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments.getDefaultInstance()) return this;
        if (documentsBuilder_ == null) {
          if (!other.documents_.isEmpty()) {
            if (documents_.isEmpty()) {
              documents_ = other.documents_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDocumentsIsMutable();
              documents_.addAll(other.documents_);
            }
            onChanged();
          }
        } else {
          if (!other.documents_.isEmpty()) {
            if (documentsBuilder_.isEmpty()) {
              documentsBuilder_.dispose();
              documentsBuilder_ = null;
              documents_ = other.documents_;
              bitField0_ = (bitField0_ & ~0x00000001);
              documentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDocumentsFieldBuilder() : null;
            } else {
              documentsBuilder_.addAllMessages(other.documents_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument> documents_ =
        java.util.Collections.emptyList();
      private void ensureDocumentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          documents_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument>(documents_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder> documentsBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument> getDocumentsList() {
        if (documentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(documents_);
        } else {
          return documentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public int getDocumentsCount() {
        if (documentsBuilder_ == null) {
          return documents_.size();
        } else {
          return documentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument getDocuments(int index) {
        if (documentsBuilder_ == null) {
          return documents_.get(index);
        } else {
          return documentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder setDocuments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument value) {
        if (documentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentsIsMutable();
          documents_.set(index, value);
          onChanged();
        } else {
          documentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder setDocuments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder builderForValue) {
        if (documentsBuilder_ == null) {
          ensureDocumentsIsMutable();
          documents_.set(index, builderForValue.build());
          onChanged();
        } else {
          documentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder addDocuments(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument value) {
        if (documentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentsIsMutable();
          documents_.add(value);
          onChanged();
        } else {
          documentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder addDocuments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument value) {
        if (documentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDocumentsIsMutable();
          documents_.add(index, value);
          onChanged();
        } else {
          documentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder addDocuments(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder builderForValue) {
        if (documentsBuilder_ == null) {
          ensureDocumentsIsMutable();
          documents_.add(builderForValue.build());
          onChanged();
        } else {
          documentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder addDocuments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder builderForValue) {
        if (documentsBuilder_ == null) {
          ensureDocumentsIsMutable();
          documents_.add(index, builderForValue.build());
          onChanged();
        } else {
          documentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder addAllDocuments(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument> values) {
        if (documentsBuilder_ == null) {
          ensureDocumentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, documents_);
          onChanged();
        } else {
          documentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder clearDocuments() {
        if (documentsBuilder_ == null) {
          documents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          documentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public Builder removeDocuments(int index) {
        if (documentsBuilder_ == null) {
          ensureDocumentsIsMutable();
          documents_.remove(index);
          onChanged();
        } else {
          documentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder getDocumentsBuilder(
          int index) {
        return getDocumentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder getDocumentsOrBuilder(
          int index) {
        if (documentsBuilder_ == null) {
          return documents_.get(index);  } else {
          return documentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder>
           getDocumentsOrBuilderList() {
        if (documentsBuilder_ != null) {
          return documentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(documents_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder addDocumentsBuilder() {
        return getDocumentsFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder addDocumentsBuilder(
          int index) {
        return getDocumentsFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.TextDocument documents = 1;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder>
           getDocumentsBuilderList() {
        return getDocumentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder>
          getDocumentsFieldBuilder() {
        if (documentsBuilder_ == null) {
          documentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder>(
                  documents_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          documents_ = null;
        }
        return documentsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.TextDocuments)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.TextDocuments)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextDocuments>
        PARSER = new com.google.protobuf.AbstractParser<TextDocuments>() {
      @java.lang.Override
      public TextDocuments parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TextDocuments(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextDocuments> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextDocuments> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocuments getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TextDocumentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.TextDocument)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
     * @return The enum numeric value on the wire for schema.
     */
    int getSchemaValue();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
     * @return The schema.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema getSchema();

    /**
     * <code>string uri = 2;</code>
     * @return The uri.
     */
    java.lang.String getUri();
    /**
     * <code>string uri = 2;</code>
     * @return The bytes for uri.
     */
    com.google.protobuf.ByteString
        getUriBytes();

    /**
     * <code>string text = 3;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <code>string text = 3;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>string md5 = 11;</code>
     * @return The md5.
     */
    java.lang.String getMd5();
    /**
     * <code>string md5 = 11;</code>
     * @return The bytes for md5.
     */
    com.google.protobuf.ByteString
        getMd5Bytes();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
     * @return The enum numeric value on the wire for language.
     */
    int getLanguageValue();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
     * @return The language.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language getLanguage();

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation>
        getSymbolsList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getSymbols(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder getSymbolsOrBuilder(
        int index);

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence>
        getOccurrencesList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence getOccurrences(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    int getOccurrencesCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder>
        getOccurrencesOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder getOccurrencesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TextDocument}
   */
  public static final class TextDocument extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.TextDocument)
      TextDocumentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TextDocument.newBuilder() to construct.
    private TextDocument(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextDocument() {
      schema_ = 0;
      uri_ = "";
      text_ = "";
      md5_ = "";
      language_ = 0;
      symbols_ = java.util.Collections.emptyList();
      occurrences_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TextDocument();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TextDocument(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              schema_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              uri_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              text_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                symbols_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              symbols_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                occurrences_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence>();
                mutable_bitField0_ |= 0x00000002;
              }
              occurrences_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.parser(), extensionRegistry));
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              language_ = rawValue;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              md5_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          occurrences_ = java.util.Collections.unmodifiableList(occurrences_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder.class);
    }

    public static final int SCHEMA_FIELD_NUMBER = 1;
    private int schema_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
     * @return The enum numeric value on the wire for schema.
     */
    @java.lang.Override public int getSchemaValue() {
      return schema_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
     * @return The schema.
     */
    @java.lang.Override public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema getSchema() {
      @SuppressWarnings("deprecation")
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema.valueOf(schema_);
      return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema.UNRECOGNIZED : result;
    }

    public static final int URI_FIELD_NUMBER = 2;
    private volatile java.lang.Object uri_;
    /**
     * <code>string uri = 2;</code>
     * @return The uri.
     */
    @java.lang.Override
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      }
    }
    /**
     * <code>string uri = 2;</code>
     * @return The bytes for uri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXT_FIELD_NUMBER = 3;
    private volatile java.lang.Object text_;
    /**
     * <code>string text = 3;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        text_ = s;
        return s;
      }
    }
    /**
     * <code>string text = 3;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MD5_FIELD_NUMBER = 11;
    private volatile java.lang.Object md5_;
    /**
     * <code>string md5 = 11;</code>
     * @return The md5.
     */
    @java.lang.Override
    public java.lang.String getMd5() {
      java.lang.Object ref = md5_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        md5_ = s;
        return s;
      }
    }
    /**
     * <code>string md5 = 11;</code>
     * @return The bytes for md5.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMd5Bytes() {
      java.lang.Object ref = md5_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        md5_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANGUAGE_FIELD_NUMBER = 10;
    private int language_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
     * @return The enum numeric value on the wire for language.
     */
    @java.lang.Override public int getLanguageValue() {
      return language_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
     * @return The language.
     */
    @java.lang.Override public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language getLanguage() {
      @SuppressWarnings("deprecation")
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.valueOf(language_);
      return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNRECOGNIZED : result;
    }

    public static final int SYMBOLS_FIELD_NUMBER = 5;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> symbols_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    @java.lang.Override
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    public static final int OCCURRENCES_FIELD_NUMBER = 6;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence> occurrences_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence> getOccurrencesList() {
      return occurrences_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder>
        getOccurrencesOrBuilderList() {
      return occurrences_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    @java.lang.Override
    public int getOccurrencesCount() {
      return occurrences_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence getOccurrences(int index) {
      return occurrences_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder getOccurrencesOrBuilder(
        int index) {
      return occurrences_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (schema_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema.LEGACY.getNumber()) {
        output.writeEnum(1, schema_);
      }
      if (!getUriBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uri_);
      }
      if (!getTextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, text_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(5, symbols_.get(i));
      }
      for (int i = 0; i < occurrences_.size(); i++) {
        output.writeMessage(6, occurrences_.get(i));
      }
      if (language_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNKNOWN_LANGUAGE.getNumber()) {
        output.writeEnum(10, language_);
      }
      if (!getMd5Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, md5_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (schema_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema.LEGACY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, schema_);
      }
      if (!getUriBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uri_);
      }
      if (!getTextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, text_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, symbols_.get(i));
      }
      for (int i = 0; i < occurrences_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, occurrences_.get(i));
      }
      if (language_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNKNOWN_LANGUAGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, language_);
      }
      if (!getMd5Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, md5_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument) obj;

      if (schema_ != other.schema_) return false;
      if (!getUri()
          .equals(other.getUri())) return false;
      if (!getText()
          .equals(other.getText())) return false;
      if (!getMd5()
          .equals(other.getMd5())) return false;
      if (language_ != other.language_) return false;
      if (!getSymbolsList()
          .equals(other.getSymbolsList())) return false;
      if (!getOccurrencesList()
          .equals(other.getOccurrencesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + schema_;
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getUri().hashCode();
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
      hash = (37 * hash) + MD5_FIELD_NUMBER;
      hash = (53 * hash) + getMd5().hashCode();
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + language_;
      if (getSymbolsCount() > 0) {
        hash = (37 * hash) + SYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolsList().hashCode();
      }
      if (getOccurrencesCount() > 0) {
        hash = (37 * hash) + OCCURRENCES_FIELD_NUMBER;
        hash = (53 * hash) + getOccurrencesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TextDocument}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.TextDocument)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocumentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSymbolsFieldBuilder();
          getOccurrencesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        schema_ = 0;

        uri_ = "";

        text_ = "";

        md5_ = "";

        language_ = 0;

        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          symbolsBuilder_.clear();
        }
        if (occurrencesBuilder_ == null) {
          occurrences_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          occurrencesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument(this);
        int from_bitField0_ = bitField0_;
        result.schema_ = schema_;
        result.uri_ = uri_;
        result.text_ = text_;
        result.md5_ = md5_;
        result.language_ = language_;
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        if (occurrencesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            occurrences_ = java.util.Collections.unmodifiableList(occurrences_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.occurrences_ = occurrences_;
        } else {
          result.occurrences_ = occurrencesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument.getDefaultInstance()) return this;
        if (other.schema_ != 0) {
          setSchemaValue(other.getSchemaValue());
        }
        if (!other.getUri().isEmpty()) {
          uri_ = other.uri_;
          onChanged();
        }
        if (!other.getText().isEmpty()) {
          text_ = other.text_;
          onChanged();
        }
        if (!other.getMd5().isEmpty()) {
          md5_ = other.md5_;
          onChanged();
        }
        if (other.language_ != 0) {
          setLanguageValue(other.getLanguageValue());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000001);
              symbolsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        if (occurrencesBuilder_ == null) {
          if (!other.occurrences_.isEmpty()) {
            if (occurrences_.isEmpty()) {
              occurrences_ = other.occurrences_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOccurrencesIsMutable();
              occurrences_.addAll(other.occurrences_);
            }
            onChanged();
          }
        } else {
          if (!other.occurrences_.isEmpty()) {
            if (occurrencesBuilder_.isEmpty()) {
              occurrencesBuilder_.dispose();
              occurrencesBuilder_ = null;
              occurrences_ = other.occurrences_;
              bitField0_ = (bitField0_ & ~0x00000002);
              occurrencesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOccurrencesFieldBuilder() : null;
            } else {
              occurrencesBuilder_.addAllMessages(other.occurrences_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int schema_ = 0;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
       * @return The enum numeric value on the wire for schema.
       */
      @java.lang.Override public int getSchemaValue() {
        return schema_;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
       * @param value The enum numeric value on the wire for schema to set.
       * @return This builder for chaining.
       */
      public Builder setSchemaValue(int value) {

        schema_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
       * @return The schema.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema getSchema() {
        @SuppressWarnings("deprecation")
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema.valueOf(schema_);
        return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
       * @param value The schema to set.
       * @return This builder for chaining.
       */
      public Builder setSchema(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Schema value) {
        if (value == null) {
          throw new NullPointerException();
        }

        schema_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Schema schema = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSchema() {

        schema_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object uri_ = "";
      /**
       * <code>string uri = 2;</code>
       * @return The uri.
       */
      public java.lang.String getUri() {
        java.lang.Object ref = uri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string uri = 2;</code>
       * @return The bytes for uri.
       */
      public com.google.protobuf.ByteString
          getUriBytes() {
        java.lang.Object ref = uri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string uri = 2;</code>
       * @param value The uri to set.
       * @return This builder for chaining.
       */
      public Builder setUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        uri_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string uri = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUri() {

        uri_ = getDefaultInstance().getUri();
        onChanged();
        return this;
      }
      /**
       * <code>string uri = 2;</code>
       * @param value The bytes for uri to set.
       * @return This builder for chaining.
       */
      public Builder setUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        uri_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>string text = 3;</code>
       * @return The text.
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          text_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string text = 3;</code>
       * @return The bytes for text.
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string text = 3;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string text = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {

        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>string text = 3;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        text_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object md5_ = "";
      /**
       * <code>string md5 = 11;</code>
       * @return The md5.
       */
      public java.lang.String getMd5() {
        java.lang.Object ref = md5_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          md5_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string md5 = 11;</code>
       * @return The bytes for md5.
       */
      public com.google.protobuf.ByteString
          getMd5Bytes() {
        java.lang.Object ref = md5_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          md5_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string md5 = 11;</code>
       * @param value The md5 to set.
       * @return This builder for chaining.
       */
      public Builder setMd5(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        md5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string md5 = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMd5() {

        md5_ = getDefaultInstance().getMd5();
        onChanged();
        return this;
      }
      /**
       * <code>string md5 = 11;</code>
       * @param value The bytes for md5 to set.
       * @return This builder for chaining.
       */
      public Builder setMd5Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        md5_ = value;
        onChanged();
        return this;
      }

      private int language_ = 0;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
       * @return The enum numeric value on the wire for language.
       */
      @java.lang.Override public int getLanguageValue() {
        return language_;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
       * @param value The enum numeric value on the wire for language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageValue(int value) {

        language_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
       * @return The language.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language getLanguage() {
        @SuppressWarnings("deprecation")
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.valueOf(language_);
        return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
       * @param value The language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language value) {
        if (value == null) {
          throw new NullPointerException();
        }

        language_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearLanguage() {

        language_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          symbols_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation>(symbols_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder setSymbols(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder setSymbols(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder addSymbols(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder addSymbols(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder addSymbols(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder addSymbols(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation symbols = 5;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder>
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence> occurrences_ =
        java.util.Collections.emptyList();
      private void ensureOccurrencesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          occurrences_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence>(occurrences_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder> occurrencesBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence> getOccurrencesList() {
        if (occurrencesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(occurrences_);
        } else {
          return occurrencesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public int getOccurrencesCount() {
        if (occurrencesBuilder_ == null) {
          return occurrences_.size();
        } else {
          return occurrencesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence getOccurrences(int index) {
        if (occurrencesBuilder_ == null) {
          return occurrences_.get(index);
        } else {
          return occurrencesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder setOccurrences(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence value) {
        if (occurrencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccurrencesIsMutable();
          occurrences_.set(index, value);
          onChanged();
        } else {
          occurrencesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder setOccurrences(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder builderForValue) {
        if (occurrencesBuilder_ == null) {
          ensureOccurrencesIsMutable();
          occurrences_.set(index, builderForValue.build());
          onChanged();
        } else {
          occurrencesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder addOccurrences(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence value) {
        if (occurrencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccurrencesIsMutable();
          occurrences_.add(value);
          onChanged();
        } else {
          occurrencesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder addOccurrences(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence value) {
        if (occurrencesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOccurrencesIsMutable();
          occurrences_.add(index, value);
          onChanged();
        } else {
          occurrencesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder addOccurrences(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder builderForValue) {
        if (occurrencesBuilder_ == null) {
          ensureOccurrencesIsMutable();
          occurrences_.add(builderForValue.build());
          onChanged();
        } else {
          occurrencesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder addOccurrences(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder builderForValue) {
        if (occurrencesBuilder_ == null) {
          ensureOccurrencesIsMutable();
          occurrences_.add(index, builderForValue.build());
          onChanged();
        } else {
          occurrencesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder addAllOccurrences(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence> values) {
        if (occurrencesBuilder_ == null) {
          ensureOccurrencesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, occurrences_);
          onChanged();
        } else {
          occurrencesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder clearOccurrences() {
        if (occurrencesBuilder_ == null) {
          occurrences_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          occurrencesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public Builder removeOccurrences(int index) {
        if (occurrencesBuilder_ == null) {
          ensureOccurrencesIsMutable();
          occurrences_.remove(index);
          onChanged();
        } else {
          occurrencesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder getOccurrencesBuilder(
          int index) {
        return getOccurrencesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder getOccurrencesOrBuilder(
          int index) {
        if (occurrencesBuilder_ == null) {
          return occurrences_.get(index);  } else {
          return occurrencesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder>
           getOccurrencesOrBuilderList() {
        if (occurrencesBuilder_ != null) {
          return occurrencesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(occurrences_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder addOccurrencesBuilder() {
        return getOccurrencesFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder addOccurrencesBuilder(
          int index) {
        return getOccurrencesFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence occurrences = 6;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder>
           getOccurrencesBuilderList() {
        return getOccurrencesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder>
          getOccurrencesFieldBuilder() {
        if (occurrencesBuilder_ == null) {
          occurrencesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder>(
                  occurrences_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          occurrences_ = null;
        }
        return occurrencesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.TextDocument)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.TextDocument)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextDocument>
        PARSER = new com.google.protobuf.AbstractParser<TextDocument>() {
      @java.lang.Override
      public TextDocument parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TextDocument(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextDocument> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextDocument> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TextDocument getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.Range)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 start_line = 1;</code>
     * @return The startLine.
     */
    int getStartLine();

    /**
     * <code>int32 start_character = 2;</code>
     * @return The startCharacter.
     */
    int getStartCharacter();

    /**
     * <code>int32 end_line = 3;</code>
     * @return The endLine.
     */
    int getEndLine();

    /**
     * <code>int32 end_character = 4;</code>
     * @return The endCharacter.
     */
    int getEndCharacter();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Range}
   */
  public static final class Range extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.Range)
      RangeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Range.newBuilder() to construct.
    private Range(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Range() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Range();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Range(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              startLine_ = input.readInt32();
              break;
            }
            case 16: {

              startCharacter_ = input.readInt32();
              break;
            }
            case 24: {

              endLine_ = input.readInt32();
              break;
            }
            case 32: {

              endCharacter_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Range_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Range_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder.class);
    }

    public static final int START_LINE_FIELD_NUMBER = 1;
    private int startLine_;
    /**
     * <code>int32 start_line = 1;</code>
     * @return The startLine.
     */
    @java.lang.Override
    public int getStartLine() {
      return startLine_;
    }

    public static final int START_CHARACTER_FIELD_NUMBER = 2;
    private int startCharacter_;
    /**
     * <code>int32 start_character = 2;</code>
     * @return The startCharacter.
     */
    @java.lang.Override
    public int getStartCharacter() {
      return startCharacter_;
    }

    public static final int END_LINE_FIELD_NUMBER = 3;
    private int endLine_;
    /**
     * <code>int32 end_line = 3;</code>
     * @return The endLine.
     */
    @java.lang.Override
    public int getEndLine() {
      return endLine_;
    }

    public static final int END_CHARACTER_FIELD_NUMBER = 4;
    private int endCharacter_;
    /**
     * <code>int32 end_character = 4;</code>
     * @return The endCharacter.
     */
    @java.lang.Override
    public int getEndCharacter() {
      return endCharacter_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (startLine_ != 0) {
        output.writeInt32(1, startLine_);
      }
      if (startCharacter_ != 0) {
        output.writeInt32(2, startCharacter_);
      }
      if (endLine_ != 0) {
        output.writeInt32(3, endLine_);
      }
      if (endCharacter_ != 0) {
        output.writeInt32(4, endCharacter_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (startLine_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startLine_);
      }
      if (startCharacter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, startCharacter_);
      }
      if (endLine_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, endLine_);
      }
      if (endCharacter_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, endCharacter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range) obj;

      if (getStartLine()
          != other.getStartLine()) return false;
      if (getStartCharacter()
          != other.getStartCharacter()) return false;
      if (getEndLine()
          != other.getEndLine()) return false;
      if (getEndCharacter()
          != other.getEndCharacter()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + START_LINE_FIELD_NUMBER;
      hash = (53 * hash) + getStartLine();
      hash = (37 * hash) + START_CHARACTER_FIELD_NUMBER;
      hash = (53 * hash) + getStartCharacter();
      hash = (37 * hash) + END_LINE_FIELD_NUMBER;
      hash = (53 * hash) + getEndLine();
      hash = (37 * hash) + END_CHARACTER_FIELD_NUMBER;
      hash = (53 * hash) + getEndCharacter();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Range}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.Range)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.RangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Range_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Range_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        startLine_ = 0;

        startCharacter_ = 0;

        endLine_ = 0;

        endCharacter_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Range_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range(this);
        result.startLine_ = startLine_;
        result.startCharacter_ = startCharacter_;
        result.endLine_ = endLine_;
        result.endCharacter_ = endCharacter_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.getDefaultInstance()) return this;
        if (other.getStartLine() != 0) {
          setStartLine(other.getStartLine());
        }
        if (other.getStartCharacter() != 0) {
          setStartCharacter(other.getStartCharacter());
        }
        if (other.getEndLine() != 0) {
          setEndLine(other.getEndLine());
        }
        if (other.getEndCharacter() != 0) {
          setEndCharacter(other.getEndCharacter());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int startLine_ ;
      /**
       * <code>int32 start_line = 1;</code>
       * @return The startLine.
       */
      @java.lang.Override
      public int getStartLine() {
        return startLine_;
      }
      /**
       * <code>int32 start_line = 1;</code>
       * @param value The startLine to set.
       * @return This builder for chaining.
       */
      public Builder setStartLine(int value) {

        startLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 start_line = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartLine() {

        startLine_ = 0;
        onChanged();
        return this;
      }

      private int startCharacter_ ;
      /**
       * <code>int32 start_character = 2;</code>
       * @return The startCharacter.
       */
      @java.lang.Override
      public int getStartCharacter() {
        return startCharacter_;
      }
      /**
       * <code>int32 start_character = 2;</code>
       * @param value The startCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setStartCharacter(int value) {

        startCharacter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 start_character = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartCharacter() {

        startCharacter_ = 0;
        onChanged();
        return this;
      }

      private int endLine_ ;
      /**
       * <code>int32 end_line = 3;</code>
       * @return The endLine.
       */
      @java.lang.Override
      public int getEndLine() {
        return endLine_;
      }
      /**
       * <code>int32 end_line = 3;</code>
       * @param value The endLine to set.
       * @return This builder for chaining.
       */
      public Builder setEndLine(int value) {

        endLine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 end_line = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndLine() {

        endLine_ = 0;
        onChanged();
        return this;
      }

      private int endCharacter_ ;
      /**
       * <code>int32 end_character = 4;</code>
       * @return The endCharacter.
       */
      @java.lang.Override
      public int getEndCharacter() {
        return endCharacter_;
      }
      /**
       * <code>int32 end_character = 4;</code>
       * @param value The endCharacter to set.
       * @return This builder for chaining.
       */
      public Builder setEndCharacter(int value) {

        endCharacter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 end_character = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndCharacter() {

        endCharacter_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.Range)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.Range)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Range>
        PARSER = new com.google.protobuf.AbstractParser<Range>() {
      @java.lang.Override
      public Range parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Range(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Range> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Range> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.Signature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
     * @return Whether the classSignature field is set.
     */
    boolean hasClassSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
     * @return The classSignature.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature getClassSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignatureOrBuilder getClassSignatureOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
     * @return Whether the methodSignature field is set.
     */
    boolean hasMethodSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
     * @return The methodSignature.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature getMethodSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignatureOrBuilder getMethodSignatureOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
     * @return Whether the typeSignature field is set.
     */
    boolean hasTypeSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
     * @return The typeSignature.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature getTypeSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignatureOrBuilder getTypeSignatureOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
     * @return Whether the valueSignature field is set.
     */
    boolean hasValueSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
     * @return The valueSignature.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature getValueSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignatureOrBuilder getValueSignatureOrBuilder();

    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.SealedValueCase getSealedValueCase();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Signature}
   */
  public static final class Signature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.Signature)
      SignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Signature.newBuilder() to construct.
    private Signature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Signature() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Signature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Signature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder subBuilder = null;
              if (sealedValueCase_ == 1) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 1;
              break;
            }
            case 18: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder subBuilder = null;
              if (sealedValueCase_ == 2) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 2;
              break;
            }
            case 26: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder subBuilder = null;
              if (sealedValueCase_ == 3) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 3;
              break;
            }
            case 34: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder subBuilder = null;
              if (sealedValueCase_ == 4) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 4;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder.class);
    }

    private int sealedValueCase_ = 0;
    private java.lang.Object sealedValue_;
    public enum SealedValueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      CLASS_SIGNATURE(1),
      METHOD_SIGNATURE(2),
      TYPE_SIGNATURE(3),
      VALUE_SIGNATURE(4),
      SEALEDVALUE_NOT_SET(0);
      private final int value;
      private SealedValueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SealedValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static SealedValueCase forNumber(int value) {
        switch (value) {
          case 1: return CLASS_SIGNATURE;
          case 2: return METHOD_SIGNATURE;
          case 3: return TYPE_SIGNATURE;
          case 4: return VALUE_SIGNATURE;
          case 0: return SEALEDVALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SealedValueCase
    getSealedValueCase() {
      return SealedValueCase.forNumber(
          sealedValueCase_);
    }

    public static final int CLASS_SIGNATURE_FIELD_NUMBER = 1;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
     * @return Whether the classSignature field is set.
     */
    @java.lang.Override
    public boolean hasClassSignature() {
      return sealedValueCase_ == 1;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
     * @return The classSignature.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature getClassSignature() {
      if (sealedValueCase_ == 1) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignatureOrBuilder getClassSignatureOrBuilder() {
      if (sealedValueCase_ == 1) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance();
    }

    public static final int METHOD_SIGNATURE_FIELD_NUMBER = 2;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
     * @return Whether the methodSignature field is set.
     */
    @java.lang.Override
    public boolean hasMethodSignature() {
      return sealedValueCase_ == 2;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
     * @return The methodSignature.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature getMethodSignature() {
      if (sealedValueCase_ == 2) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignatureOrBuilder getMethodSignatureOrBuilder() {
      if (sealedValueCase_ == 2) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance();
    }

    public static final int TYPE_SIGNATURE_FIELD_NUMBER = 3;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
     * @return Whether the typeSignature field is set.
     */
    @java.lang.Override
    public boolean hasTypeSignature() {
      return sealedValueCase_ == 3;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
     * @return The typeSignature.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature getTypeSignature() {
      if (sealedValueCase_ == 3) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignatureOrBuilder getTypeSignatureOrBuilder() {
      if (sealedValueCase_ == 3) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance();
    }

    public static final int VALUE_SIGNATURE_FIELD_NUMBER = 4;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
     * @return Whether the valueSignature field is set.
     */
    @java.lang.Override
    public boolean hasValueSignature() {
      return sealedValueCase_ == 4;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
     * @return The valueSignature.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature getValueSignature() {
      if (sealedValueCase_ == 4) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignatureOrBuilder getValueSignatureOrBuilder() {
      if (sealedValueCase_ == 4) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sealedValueCase_ == 1) {
        output.writeMessage(1, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_);
      }
      if (sealedValueCase_ == 2) {
        output.writeMessage(2, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_);
      }
      if (sealedValueCase_ == 3) {
        output.writeMessage(3, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_);
      }
      if (sealedValueCase_ == 4) {
        output.writeMessage(4, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sealedValueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_);
      }
      if (sealedValueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_);
      }
      if (sealedValueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_);
      }
      if (sealedValueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature) obj;

      if (!getSealedValueCase().equals(other.getSealedValueCase())) return false;
      switch (sealedValueCase_) {
        case 1:
          if (!getClassSignature()
              .equals(other.getClassSignature())) return false;
          break;
        case 2:
          if (!getMethodSignature()
              .equals(other.getMethodSignature())) return false;
          break;
        case 3:
          if (!getTypeSignature()
              .equals(other.getTypeSignature())) return false;
          break;
        case 4:
          if (!getValueSignature()
              .equals(other.getValueSignature())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (sealedValueCase_) {
        case 1:
          hash = (37 * hash) + CLASS_SIGNATURE_FIELD_NUMBER;
          hash = (53 * hash) + getClassSignature().hashCode();
          break;
        case 2:
          hash = (37 * hash) + METHOD_SIGNATURE_FIELD_NUMBER;
          hash = (53 * hash) + getMethodSignature().hashCode();
          break;
        case 3:
          hash = (37 * hash) + TYPE_SIGNATURE_FIELD_NUMBER;
          hash = (53 * hash) + getTypeSignature().hashCode();
          break;
        case 4:
          hash = (37 * hash) + VALUE_SIGNATURE_FIELD_NUMBER;
          hash = (53 * hash) + getValueSignature().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Signature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.Signature)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sealedValueCase_ = 0;
        sealedValue_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature(this);
        if (sealedValueCase_ == 1) {
          if (classSignatureBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = classSignatureBuilder_.build();
          }
        }
        if (sealedValueCase_ == 2) {
          if (methodSignatureBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = methodSignatureBuilder_.build();
          }
        }
        if (sealedValueCase_ == 3) {
          if (typeSignatureBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = typeSignatureBuilder_.build();
          }
        }
        if (sealedValueCase_ == 4) {
          if (valueSignatureBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = valueSignatureBuilder_.build();
          }
        }
        result.sealedValueCase_ = sealedValueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.getDefaultInstance()) return this;
        switch (other.getSealedValueCase()) {
          case CLASS_SIGNATURE: {
            mergeClassSignature(other.getClassSignature());
            break;
          }
          case METHOD_SIGNATURE: {
            mergeMethodSignature(other.getMethodSignature());
            break;
          }
          case TYPE_SIGNATURE: {
            mergeTypeSignature(other.getTypeSignature());
            break;
          }
          case VALUE_SIGNATURE: {
            mergeValueSignature(other.getValueSignature());
            break;
          }
          case SEALEDVALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sealedValueCase_ = 0;
      private java.lang.Object sealedValue_;
      public SealedValueCase
          getSealedValueCase() {
        return SealedValueCase.forNumber(
            sealedValueCase_);
      }

      public Builder clearSealedValue() {
        sealedValueCase_ = 0;
        sealedValue_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignatureOrBuilder> classSignatureBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       * @return Whether the classSignature field is set.
       */
      @java.lang.Override
      public boolean hasClassSignature() {
        return sealedValueCase_ == 1;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       * @return The classSignature.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature getClassSignature() {
        if (classSignatureBuilder_ == null) {
          if (sealedValueCase_ == 1) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 1) {
            return classSignatureBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       */
      public Builder setClassSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature value) {
        if (classSignatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          classSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       */
      public Builder setClassSignature(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder builderForValue) {
        if (classSignatureBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          classSignatureBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       */
      public Builder mergeClassSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature value) {
        if (classSignatureBuilder_ == null) {
          if (sealedValueCase_ == 1 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 1) {
            classSignatureBuilder_.mergeFrom(value);
          }
          classSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       */
      public Builder clearClassSignature() {
        if (classSignatureBuilder_ == null) {
          if (sealedValueCase_ == 1) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 1) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          classSignatureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder getClassSignatureBuilder() {
        return getClassSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignatureOrBuilder getClassSignatureOrBuilder() {
        if ((sealedValueCase_ == 1) && (classSignatureBuilder_ != null)) {
          return classSignatureBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 1) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ClassSignature class_signature = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignatureOrBuilder>
          getClassSignatureFieldBuilder() {
        if (classSignatureBuilder_ == null) {
          if (!(sealedValueCase_ == 1)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance();
          }
          classSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignatureOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 1;
        onChanged();;
        return classSignatureBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignatureOrBuilder> methodSignatureBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       * @return Whether the methodSignature field is set.
       */
      @java.lang.Override
      public boolean hasMethodSignature() {
        return sealedValueCase_ == 2;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       * @return The methodSignature.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature getMethodSignature() {
        if (methodSignatureBuilder_ == null) {
          if (sealedValueCase_ == 2) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 2) {
            return methodSignatureBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       */
      public Builder setMethodSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature value) {
        if (methodSignatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          methodSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       */
      public Builder setMethodSignature(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder builderForValue) {
        if (methodSignatureBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          methodSignatureBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       */
      public Builder mergeMethodSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature value) {
        if (methodSignatureBuilder_ == null) {
          if (sealedValueCase_ == 2 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 2) {
            methodSignatureBuilder_.mergeFrom(value);
          }
          methodSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       */
      public Builder clearMethodSignature() {
        if (methodSignatureBuilder_ == null) {
          if (sealedValueCase_ == 2) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 2) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          methodSignatureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder getMethodSignatureBuilder() {
        return getMethodSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignatureOrBuilder getMethodSignatureOrBuilder() {
        if ((sealedValueCase_ == 2) && (methodSignatureBuilder_ != null)) {
          return methodSignatureBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 2) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.MethodSignature method_signature = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignatureOrBuilder>
          getMethodSignatureFieldBuilder() {
        if (methodSignatureBuilder_ == null) {
          if (!(sealedValueCase_ == 2)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance();
          }
          methodSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignatureOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 2;
        onChanged();;
        return methodSignatureBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignatureOrBuilder> typeSignatureBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       * @return Whether the typeSignature field is set.
       */
      @java.lang.Override
      public boolean hasTypeSignature() {
        return sealedValueCase_ == 3;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       * @return The typeSignature.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature getTypeSignature() {
        if (typeSignatureBuilder_ == null) {
          if (sealedValueCase_ == 3) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 3) {
            return typeSignatureBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       */
      public Builder setTypeSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature value) {
        if (typeSignatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          typeSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       */
      public Builder setTypeSignature(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder builderForValue) {
        if (typeSignatureBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          typeSignatureBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       */
      public Builder mergeTypeSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature value) {
        if (typeSignatureBuilder_ == null) {
          if (sealedValueCase_ == 3 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 3) {
            typeSignatureBuilder_.mergeFrom(value);
          }
          typeSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       */
      public Builder clearTypeSignature() {
        if (typeSignatureBuilder_ == null) {
          if (sealedValueCase_ == 3) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 3) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          typeSignatureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder getTypeSignatureBuilder() {
        return getTypeSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignatureOrBuilder getTypeSignatureOrBuilder() {
        if ((sealedValueCase_ == 3) && (typeSignatureBuilder_ != null)) {
          return typeSignatureBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 3) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeSignature type_signature = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignatureOrBuilder>
          getTypeSignatureFieldBuilder() {
        if (typeSignatureBuilder_ == null) {
          if (!(sealedValueCase_ == 3)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance();
          }
          typeSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignatureOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 3;
        onChanged();;
        return typeSignatureBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignatureOrBuilder> valueSignatureBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       * @return Whether the valueSignature field is set.
       */
      @java.lang.Override
      public boolean hasValueSignature() {
        return sealedValueCase_ == 4;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       * @return The valueSignature.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature getValueSignature() {
        if (valueSignatureBuilder_ == null) {
          if (sealedValueCase_ == 4) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 4) {
            return valueSignatureBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       */
      public Builder setValueSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature value) {
        if (valueSignatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          valueSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       */
      public Builder setValueSignature(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder builderForValue) {
        if (valueSignatureBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          valueSignatureBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       */
      public Builder mergeValueSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature value) {
        if (valueSignatureBuilder_ == null) {
          if (sealedValueCase_ == 4 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 4) {
            valueSignatureBuilder_.mergeFrom(value);
          }
          valueSignatureBuilder_.setMessage(value);
        }
        sealedValueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       */
      public Builder clearValueSignature() {
        if (valueSignatureBuilder_ == null) {
          if (sealedValueCase_ == 4) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 4) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          valueSignatureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder getValueSignatureBuilder() {
        return getValueSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignatureOrBuilder getValueSignatureOrBuilder() {
        if ((sealedValueCase_ == 4) && (valueSignatureBuilder_ != null)) {
          return valueSignatureBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 4) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ValueSignature value_signature = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignatureOrBuilder>
          getValueSignatureFieldBuilder() {
        if (valueSignatureBuilder_ == null) {
          if (!(sealedValueCase_ == 4)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance();
          }
          valueSignatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignatureOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 4;
        onChanged();;
        return valueSignatureBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.Signature)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.Signature)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Signature>
        PARSER = new com.google.protobuf.AbstractParser<Signature>() {
      @java.lang.Override
      public Signature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Signature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Signature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Signature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClassSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.ClassSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return Whether the typeParameters field is set.
     */
    boolean hasTypeParameters();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return The typeParameters.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder();

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>
        getParentsList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getParents(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    int getParentsCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
        getParentsOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getParentsOrBuilder(
        int index);

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
     * @return Whether the declarations field is set.
     */
    boolean hasDeclarations();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
     * @return The declarations.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDeclarations();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getDeclarationsOrBuilder();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ClassSignature}
   */
  public static final class ClassSignature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.ClassSignature)
      ClassSignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClassSignature.newBuilder() to construct.
    private ClassSignature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClassSignature() {
      parents_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClassSignature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClassSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder subBuilder = null;
              if (typeParameters_ != null) {
                subBuilder = typeParameters_.toBuilder();
              }
              typeParameters_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(typeParameters_);
                typeParameters_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                parents_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>();
                mutable_bitField0_ |= 0x00000001;
              }
              parents_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry));
              break;
            }
            case 34: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder subBuilder = null;
              if (declarations_ != null) {
                subBuilder = declarations_.toBuilder();
              }
              declarations_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(declarations_);
                declarations_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          parents_ = java.util.Collections.unmodifiableList(parents_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder.class);
    }

    public static final int TYPE_PARAMETERS_FIELD_NUMBER = 1;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope typeParameters_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return Whether the typeParameters field is set.
     */
    @java.lang.Override
    public boolean hasTypeParameters() {
      return typeParameters_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return The typeParameters.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters() {
      return typeParameters_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder() {
      return getTypeParameters();
    }

    public static final int PARENTS_FIELD_NUMBER = 2;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> parents_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> getParentsList() {
      return parents_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
        getParentsOrBuilderList() {
      return parents_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    @java.lang.Override
    public int getParentsCount() {
      return parents_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getParents(int index) {
      return parents_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getParentsOrBuilder(
        int index) {
      return parents_.get(index);
    }

    public static final int DECLARATIONS_FIELD_NUMBER = 4;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope declarations_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
     * @return Whether the declarations field is set.
     */
    @java.lang.Override
    public boolean hasDeclarations() {
      return declarations_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
     * @return The declarations.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDeclarations() {
      return declarations_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : declarations_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getDeclarationsOrBuilder() {
      return getDeclarations();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeParameters_ != null) {
        output.writeMessage(1, getTypeParameters());
      }
      for (int i = 0; i < parents_.size(); i++) {
        output.writeMessage(2, parents_.get(i));
      }
      if (declarations_ != null) {
        output.writeMessage(4, getDeclarations());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeParameters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTypeParameters());
      }
      for (int i = 0; i < parents_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, parents_.get(i));
      }
      if (declarations_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDeclarations());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) obj;

      if (hasTypeParameters() != other.hasTypeParameters()) return false;
      if (hasTypeParameters()) {
        if (!getTypeParameters()
            .equals(other.getTypeParameters())) return false;
      }
      if (!getParentsList()
          .equals(other.getParentsList())) return false;
      if (hasDeclarations() != other.hasDeclarations()) return false;
      if (hasDeclarations()) {
        if (!getDeclarations()
            .equals(other.getDeclarations())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTypeParameters()) {
        hash = (37 * hash) + TYPE_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getTypeParameters().hashCode();
      }
      if (getParentsCount() > 0) {
        hash = (37 * hash) + PARENTS_FIELD_NUMBER;
        hash = (53 * hash) + getParentsList().hashCode();
      }
      if (hasDeclarations()) {
        hash = (37 * hash) + DECLARATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDeclarations().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ClassSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.ClassSignature)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getParentsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (typeParametersBuilder_ == null) {
          typeParameters_ = null;
        } else {
          typeParameters_ = null;
          typeParametersBuilder_ = null;
        }
        if (parentsBuilder_ == null) {
          parents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          parentsBuilder_.clear();
        }
        if (declarationsBuilder_ == null) {
          declarations_ = null;
        } else {
          declarations_ = null;
          declarationsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature(this);
        int from_bitField0_ = bitField0_;
        if (typeParametersBuilder_ == null) {
          result.typeParameters_ = typeParameters_;
        } else {
          result.typeParameters_ = typeParametersBuilder_.build();
        }
        if (parentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            parents_ = java.util.Collections.unmodifiableList(parents_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parents_ = parents_;
        } else {
          result.parents_ = parentsBuilder_.build();
        }
        if (declarationsBuilder_ == null) {
          result.declarations_ = declarations_;
        } else {
          result.declarations_ = declarationsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature.getDefaultInstance()) return this;
        if (other.hasTypeParameters()) {
          mergeTypeParameters(other.getTypeParameters());
        }
        if (parentsBuilder_ == null) {
          if (!other.parents_.isEmpty()) {
            if (parents_.isEmpty()) {
              parents_ = other.parents_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParentsIsMutable();
              parents_.addAll(other.parents_);
            }
            onChanged();
          }
        } else {
          if (!other.parents_.isEmpty()) {
            if (parentsBuilder_.isEmpty()) {
              parentsBuilder_.dispose();
              parentsBuilder_ = null;
              parents_ = other.parents_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParentsFieldBuilder() : null;
            } else {
              parentsBuilder_.addAllMessages(other.parents_);
            }
          }
        }
        if (other.hasDeclarations()) {
          mergeDeclarations(other.getDeclarations());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope typeParameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder> typeParametersBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       * @return Whether the typeParameters field is set.
       */
      public boolean hasTypeParameters() {
        return typeParametersBuilder_ != null || typeParameters_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       * @return The typeParameters.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters() {
        if (typeParametersBuilder_ == null) {
          return typeParameters_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
        } else {
          return typeParametersBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder setTypeParameters(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (typeParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeParameters_ = value;
          onChanged();
        } else {
          typeParametersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder setTypeParameters(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (typeParametersBuilder_ == null) {
          typeParameters_ = builderForValue.build();
          onChanged();
        } else {
          typeParametersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder mergeTypeParameters(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (typeParametersBuilder_ == null) {
          if (typeParameters_ != null) {
            typeParameters_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.newBuilder(typeParameters_).mergeFrom(value).buildPartial();
          } else {
            typeParameters_ = value;
          }
          onChanged();
        } else {
          typeParametersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder clearTypeParameters() {
        if (typeParametersBuilder_ == null) {
          typeParameters_ = null;
          onChanged();
        } else {
          typeParameters_ = null;
          typeParametersBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder getTypeParametersBuilder() {

        onChanged();
        return getTypeParametersFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder() {
        if (typeParametersBuilder_ != null) {
          return typeParametersBuilder_.getMessageOrBuilder();
        } else {
          return typeParameters_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
          getTypeParametersFieldBuilder() {
        if (typeParametersBuilder_ == null) {
          typeParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>(
                  getTypeParameters(),
                  getParentForChildren(),
                  isClean());
          typeParameters_ = null;
        }
        return typeParametersBuilder_;
      }

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> parents_ =
        java.util.Collections.emptyList();
      private void ensureParentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          parents_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>(parents_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> parentsBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> getParentsList() {
        if (parentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parents_);
        } else {
          return parentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public int getParentsCount() {
        if (parentsBuilder_ == null) {
          return parents_.size();
        } else {
          return parentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getParents(int index) {
        if (parentsBuilder_ == null) {
          return parents_.get(index);
        } else {
          return parentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder setParents(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (parentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentsIsMutable();
          parents_.set(index, value);
          onChanged();
        } else {
          parentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder setParents(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.set(index, builderForValue.build());
          onChanged();
        } else {
          parentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder addParents(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (parentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentsIsMutable();
          parents_.add(value);
          onChanged();
        } else {
          parentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder addParents(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (parentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentsIsMutable();
          parents_.add(index, value);
          onChanged();
        } else {
          parentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder addParents(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.add(builderForValue.build());
          onChanged();
        } else {
          parentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder addParents(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.add(index, builderForValue.build());
          onChanged();
        } else {
          parentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder addAllParents(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> values) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parents_);
          onChanged();
        } else {
          parentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder clearParents() {
        if (parentsBuilder_ == null) {
          parents_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public Builder removeParents(int index) {
        if (parentsBuilder_ == null) {
          ensureParentsIsMutable();
          parents_.remove(index);
          onChanged();
        } else {
          parentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getParentsBuilder(
          int index) {
        return getParentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getParentsOrBuilder(
          int index) {
        if (parentsBuilder_ == null) {
          return parents_.get(index);  } else {
          return parentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
           getParentsOrBuilderList() {
        if (parentsBuilder_ != null) {
          return parentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parents_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder addParentsBuilder() {
        return getParentsFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder addParentsBuilder(
          int index) {
        return getParentsFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type parents = 2;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder>
           getParentsBuilderList() {
        return getParentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getParentsFieldBuilder() {
        if (parentsBuilder_ == null) {
          parentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  parents_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          parents_ = null;
        }
        return parentsBuilder_;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope declarations_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder> declarationsBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       * @return Whether the declarations field is set.
       */
      public boolean hasDeclarations() {
        return declarationsBuilder_ != null || declarations_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       * @return The declarations.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDeclarations() {
        if (declarationsBuilder_ == null) {
          return declarations_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : declarations_;
        } else {
          return declarationsBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       */
      public Builder setDeclarations(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (declarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          declarations_ = value;
          onChanged();
        } else {
          declarationsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       */
      public Builder setDeclarations(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (declarationsBuilder_ == null) {
          declarations_ = builderForValue.build();
          onChanged();
        } else {
          declarationsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       */
      public Builder mergeDeclarations(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (declarationsBuilder_ == null) {
          if (declarations_ != null) {
            declarations_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.newBuilder(declarations_).mergeFrom(value).buildPartial();
          } else {
            declarations_ = value;
          }
          onChanged();
        } else {
          declarationsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       */
      public Builder clearDeclarations() {
        if (declarationsBuilder_ == null) {
          declarations_ = null;
          onChanged();
        } else {
          declarations_ = null;
          declarationsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder getDeclarationsBuilder() {

        onChanged();
        return getDeclarationsFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getDeclarationsOrBuilder() {
        if (declarationsBuilder_ != null) {
          return declarationsBuilder_.getMessageOrBuilder();
        } else {
          return declarations_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : declarations_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
          getDeclarationsFieldBuilder() {
        if (declarationsBuilder_ == null) {
          declarationsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>(
                  getDeclarations(),
                  getParentForChildren(),
                  isClean());
          declarations_ = null;
        }
        return declarationsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.ClassSignature)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.ClassSignature)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClassSignature>
        PARSER = new com.google.protobuf.AbstractParser<ClassSignature>() {
      @java.lang.Override
      public ClassSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClassSignature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClassSignature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClassSignature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ClassSignature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MethodSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.MethodSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return Whether the typeParameters field is set.
     */
    boolean hasTypeParameters();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return The typeParameters.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder();

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope>
        getParameterListsList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getParameterLists(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    int getParameterListsCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
        getParameterListsOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getParameterListsOrBuilder(
        int index);

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
     * @return Whether the returnType field is set.
     */
    boolean hasReturnType();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
     * @return The returnType.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getReturnType();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getReturnTypeOrBuilder();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.MethodSignature}
   */
  public static final class MethodSignature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.MethodSignature)
      MethodSignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MethodSignature.newBuilder() to construct.
    private MethodSignature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MethodSignature() {
      parameterLists_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MethodSignature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MethodSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder subBuilder = null;
              if (typeParameters_ != null) {
                subBuilder = typeParameters_.toBuilder();
              }
              typeParameters_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(typeParameters_);
                typeParameters_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                parameterLists_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope>();
                mutable_bitField0_ |= 0x00000001;
              }
              parameterLists_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.parser(), extensionRegistry));
              break;
            }
            case 26: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder subBuilder = null;
              if (returnType_ != null) {
                subBuilder = returnType_.toBuilder();
              }
              returnType_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(returnType_);
                returnType_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          parameterLists_ = java.util.Collections.unmodifiableList(parameterLists_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder.class);
    }

    public static final int TYPE_PARAMETERS_FIELD_NUMBER = 1;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope typeParameters_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return Whether the typeParameters field is set.
     */
    @java.lang.Override
    public boolean hasTypeParameters() {
      return typeParameters_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return The typeParameters.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters() {
      return typeParameters_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder() {
      return getTypeParameters();
    }

    public static final int PARAMETER_LISTS_FIELD_NUMBER = 2;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope> parameterLists_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope> getParameterListsList() {
      return parameterLists_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
        getParameterListsOrBuilderList() {
      return parameterLists_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    @java.lang.Override
    public int getParameterListsCount() {
      return parameterLists_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getParameterLists(int index) {
      return parameterLists_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getParameterListsOrBuilder(
        int index) {
      return parameterLists_.get(index);
    }

    public static final int RETURN_TYPE_FIELD_NUMBER = 3;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type returnType_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
     * @return Whether the returnType field is set.
     */
    @java.lang.Override
    public boolean hasReturnType() {
      return returnType_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
     * @return The returnType.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getReturnType() {
      return returnType_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : returnType_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getReturnTypeOrBuilder() {
      return getReturnType();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeParameters_ != null) {
        output.writeMessage(1, getTypeParameters());
      }
      for (int i = 0; i < parameterLists_.size(); i++) {
        output.writeMessage(2, parameterLists_.get(i));
      }
      if (returnType_ != null) {
        output.writeMessage(3, getReturnType());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeParameters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTypeParameters());
      }
      for (int i = 0; i < parameterLists_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, parameterLists_.get(i));
      }
      if (returnType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getReturnType());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) obj;

      if (hasTypeParameters() != other.hasTypeParameters()) return false;
      if (hasTypeParameters()) {
        if (!getTypeParameters()
            .equals(other.getTypeParameters())) return false;
      }
      if (!getParameterListsList()
          .equals(other.getParameterListsList())) return false;
      if (hasReturnType() != other.hasReturnType()) return false;
      if (hasReturnType()) {
        if (!getReturnType()
            .equals(other.getReturnType())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTypeParameters()) {
        hash = (37 * hash) + TYPE_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getTypeParameters().hashCode();
      }
      if (getParameterListsCount() > 0) {
        hash = (37 * hash) + PARAMETER_LISTS_FIELD_NUMBER;
        hash = (53 * hash) + getParameterListsList().hashCode();
      }
      if (hasReturnType()) {
        hash = (37 * hash) + RETURN_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getReturnType().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.MethodSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.MethodSignature)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getParameterListsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (typeParametersBuilder_ == null) {
          typeParameters_ = null;
        } else {
          typeParameters_ = null;
          typeParametersBuilder_ = null;
        }
        if (parameterListsBuilder_ == null) {
          parameterLists_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          parameterListsBuilder_.clear();
        }
        if (returnTypeBuilder_ == null) {
          returnType_ = null;
        } else {
          returnType_ = null;
          returnTypeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature(this);
        int from_bitField0_ = bitField0_;
        if (typeParametersBuilder_ == null) {
          result.typeParameters_ = typeParameters_;
        } else {
          result.typeParameters_ = typeParametersBuilder_.build();
        }
        if (parameterListsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            parameterLists_ = java.util.Collections.unmodifiableList(parameterLists_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parameterLists_ = parameterLists_;
        } else {
          result.parameterLists_ = parameterListsBuilder_.build();
        }
        if (returnTypeBuilder_ == null) {
          result.returnType_ = returnType_;
        } else {
          result.returnType_ = returnTypeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature.getDefaultInstance()) return this;
        if (other.hasTypeParameters()) {
          mergeTypeParameters(other.getTypeParameters());
        }
        if (parameterListsBuilder_ == null) {
          if (!other.parameterLists_.isEmpty()) {
            if (parameterLists_.isEmpty()) {
              parameterLists_ = other.parameterLists_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParameterListsIsMutable();
              parameterLists_.addAll(other.parameterLists_);
            }
            onChanged();
          }
        } else {
          if (!other.parameterLists_.isEmpty()) {
            if (parameterListsBuilder_.isEmpty()) {
              parameterListsBuilder_.dispose();
              parameterListsBuilder_ = null;
              parameterLists_ = other.parameterLists_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parameterListsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParameterListsFieldBuilder() : null;
            } else {
              parameterListsBuilder_.addAllMessages(other.parameterLists_);
            }
          }
        }
        if (other.hasReturnType()) {
          mergeReturnType(other.getReturnType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope typeParameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder> typeParametersBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       * @return Whether the typeParameters field is set.
       */
      public boolean hasTypeParameters() {
        return typeParametersBuilder_ != null || typeParameters_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       * @return The typeParameters.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters() {
        if (typeParametersBuilder_ == null) {
          return typeParameters_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
        } else {
          return typeParametersBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder setTypeParameters(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (typeParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeParameters_ = value;
          onChanged();
        } else {
          typeParametersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder setTypeParameters(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (typeParametersBuilder_ == null) {
          typeParameters_ = builderForValue.build();
          onChanged();
        } else {
          typeParametersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder mergeTypeParameters(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (typeParametersBuilder_ == null) {
          if (typeParameters_ != null) {
            typeParameters_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.newBuilder(typeParameters_).mergeFrom(value).buildPartial();
          } else {
            typeParameters_ = value;
          }
          onChanged();
        } else {
          typeParametersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder clearTypeParameters() {
        if (typeParametersBuilder_ == null) {
          typeParameters_ = null;
          onChanged();
        } else {
          typeParameters_ = null;
          typeParametersBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder getTypeParametersBuilder() {

        onChanged();
        return getTypeParametersFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder() {
        if (typeParametersBuilder_ != null) {
          return typeParametersBuilder_.getMessageOrBuilder();
        } else {
          return typeParameters_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
          getTypeParametersFieldBuilder() {
        if (typeParametersBuilder_ == null) {
          typeParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>(
                  getTypeParameters(),
                  getParentForChildren(),
                  isClean());
          typeParameters_ = null;
        }
        return typeParametersBuilder_;
      }

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope> parameterLists_ =
        java.util.Collections.emptyList();
      private void ensureParameterListsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          parameterLists_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope>(parameterLists_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder> parameterListsBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope> getParameterListsList() {
        if (parameterListsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameterLists_);
        } else {
          return parameterListsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public int getParameterListsCount() {
        if (parameterListsBuilder_ == null) {
          return parameterLists_.size();
        } else {
          return parameterListsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getParameterLists(int index) {
        if (parameterListsBuilder_ == null) {
          return parameterLists_.get(index);
        } else {
          return parameterListsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder setParameterLists(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (parameterListsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterListsIsMutable();
          parameterLists_.set(index, value);
          onChanged();
        } else {
          parameterListsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder setParameterLists(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (parameterListsBuilder_ == null) {
          ensureParameterListsIsMutable();
          parameterLists_.set(index, builderForValue.build());
          onChanged();
        } else {
          parameterListsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder addParameterLists(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (parameterListsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterListsIsMutable();
          parameterLists_.add(value);
          onChanged();
        } else {
          parameterListsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder addParameterLists(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (parameterListsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterListsIsMutable();
          parameterLists_.add(index, value);
          onChanged();
        } else {
          parameterListsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder addParameterLists(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (parameterListsBuilder_ == null) {
          ensureParameterListsIsMutable();
          parameterLists_.add(builderForValue.build());
          onChanged();
        } else {
          parameterListsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder addParameterLists(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (parameterListsBuilder_ == null) {
          ensureParameterListsIsMutable();
          parameterLists_.add(index, builderForValue.build());
          onChanged();
        } else {
          parameterListsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder addAllParameterLists(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope> values) {
        if (parameterListsBuilder_ == null) {
          ensureParameterListsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parameterLists_);
          onChanged();
        } else {
          parameterListsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder clearParameterLists() {
        if (parameterListsBuilder_ == null) {
          parameterLists_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parameterListsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public Builder removeParameterLists(int index) {
        if (parameterListsBuilder_ == null) {
          ensureParameterListsIsMutable();
          parameterLists_.remove(index);
          onChanged();
        } else {
          parameterListsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder getParameterListsBuilder(
          int index) {
        return getParameterListsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getParameterListsOrBuilder(
          int index) {
        if (parameterListsBuilder_ == null) {
          return parameterLists_.get(index);  } else {
          return parameterListsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
           getParameterListsOrBuilderList() {
        if (parameterListsBuilder_ != null) {
          return parameterListsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameterLists_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder addParameterListsBuilder() {
        return getParameterListsFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder addParameterListsBuilder(
          int index) {
        return getParameterListsFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Scope parameter_lists = 2;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder>
           getParameterListsBuilderList() {
        return getParameterListsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
          getParameterListsFieldBuilder() {
        if (parameterListsBuilder_ == null) {
          parameterListsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>(
                  parameterLists_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          parameterLists_ = null;
        }
        return parameterListsBuilder_;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type returnType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> returnTypeBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       * @return Whether the returnType field is set.
       */
      public boolean hasReturnType() {
        return returnTypeBuilder_ != null || returnType_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       * @return The returnType.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getReturnType() {
        if (returnTypeBuilder_ == null) {
          return returnType_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : returnType_;
        } else {
          return returnTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       */
      public Builder setReturnType(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (returnTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnType_ = value;
          onChanged();
        } else {
          returnTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       */
      public Builder setReturnType(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (returnTypeBuilder_ == null) {
          returnType_ = builderForValue.build();
          onChanged();
        } else {
          returnTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       */
      public Builder mergeReturnType(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (returnTypeBuilder_ == null) {
          if (returnType_ != null) {
            returnType_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.newBuilder(returnType_).mergeFrom(value).buildPartial();
          } else {
            returnType_ = value;
          }
          onChanged();
        } else {
          returnTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       */
      public Builder clearReturnType() {
        if (returnTypeBuilder_ == null) {
          returnType_ = null;
          onChanged();
        } else {
          returnType_ = null;
          returnTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getReturnTypeBuilder() {

        onChanged();
        return getReturnTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getReturnTypeOrBuilder() {
        if (returnTypeBuilder_ != null) {
          return returnTypeBuilder_.getMessageOrBuilder();
        } else {
          return returnType_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : returnType_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type return_type = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getReturnTypeFieldBuilder() {
        if (returnTypeBuilder_ == null) {
          returnTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  getReturnType(),
                  getParentForChildren(),
                  isClean());
          returnType_ = null;
        }
        return returnTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.MethodSignature)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.MethodSignature)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MethodSignature>
        PARSER = new com.google.protobuf.AbstractParser<MethodSignature>() {
      @java.lang.Override
      public MethodSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MethodSignature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MethodSignature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MethodSignature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.MethodSignature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TypeSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.TypeSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return Whether the typeParameters field is set.
     */
    boolean hasTypeParameters();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return The typeParameters.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
     * @return Whether the lowerBound field is set.
     */
    boolean hasLowerBound();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
     * @return The lowerBound.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getLowerBound();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getLowerBoundOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
     * @return Whether the upperBound field is set.
     */
    boolean hasUpperBound();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
     * @return The upperBound.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getUpperBound();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getUpperBoundOrBuilder();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TypeSignature}
   */
  public static final class TypeSignature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.TypeSignature)
      TypeSignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TypeSignature.newBuilder() to construct.
    private TypeSignature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TypeSignature() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TypeSignature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TypeSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder subBuilder = null;
              if (typeParameters_ != null) {
                subBuilder = typeParameters_.toBuilder();
              }
              typeParameters_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(typeParameters_);
                typeParameters_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder subBuilder = null;
              if (lowerBound_ != null) {
                subBuilder = lowerBound_.toBuilder();
              }
              lowerBound_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lowerBound_);
                lowerBound_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder subBuilder = null;
              if (upperBound_ != null) {
                subBuilder = upperBound_.toBuilder();
              }
              upperBound_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(upperBound_);
                upperBound_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder.class);
    }

    public static final int TYPE_PARAMETERS_FIELD_NUMBER = 1;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope typeParameters_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return Whether the typeParameters field is set.
     */
    @java.lang.Override
    public boolean hasTypeParameters() {
      return typeParameters_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     * @return The typeParameters.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters() {
      return typeParameters_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder() {
      return getTypeParameters();
    }

    public static final int LOWER_BOUND_FIELD_NUMBER = 2;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type lowerBound_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
     * @return Whether the lowerBound field is set.
     */
    @java.lang.Override
    public boolean hasLowerBound() {
      return lowerBound_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
     * @return The lowerBound.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getLowerBound() {
      return lowerBound_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : lowerBound_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getLowerBoundOrBuilder() {
      return getLowerBound();
    }

    public static final int UPPER_BOUND_FIELD_NUMBER = 3;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type upperBound_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
     * @return Whether the upperBound field is set.
     */
    @java.lang.Override
    public boolean hasUpperBound() {
      return upperBound_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
     * @return The upperBound.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getUpperBound() {
      return upperBound_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : upperBound_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getUpperBoundOrBuilder() {
      return getUpperBound();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeParameters_ != null) {
        output.writeMessage(1, getTypeParameters());
      }
      if (lowerBound_ != null) {
        output.writeMessage(2, getLowerBound());
      }
      if (upperBound_ != null) {
        output.writeMessage(3, getUpperBound());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (typeParameters_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTypeParameters());
      }
      if (lowerBound_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLowerBound());
      }
      if (upperBound_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getUpperBound());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) obj;

      if (hasTypeParameters() != other.hasTypeParameters()) return false;
      if (hasTypeParameters()) {
        if (!getTypeParameters()
            .equals(other.getTypeParameters())) return false;
      }
      if (hasLowerBound() != other.hasLowerBound()) return false;
      if (hasLowerBound()) {
        if (!getLowerBound()
            .equals(other.getLowerBound())) return false;
      }
      if (hasUpperBound() != other.hasUpperBound()) return false;
      if (hasUpperBound()) {
        if (!getUpperBound()
            .equals(other.getUpperBound())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTypeParameters()) {
        hash = (37 * hash) + TYPE_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getTypeParameters().hashCode();
      }
      if (hasLowerBound()) {
        hash = (37 * hash) + LOWER_BOUND_FIELD_NUMBER;
        hash = (53 * hash) + getLowerBound().hashCode();
      }
      if (hasUpperBound()) {
        hash = (37 * hash) + UPPER_BOUND_FIELD_NUMBER;
        hash = (53 * hash) + getUpperBound().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TypeSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.TypeSignature)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (typeParametersBuilder_ == null) {
          typeParameters_ = null;
        } else {
          typeParameters_ = null;
          typeParametersBuilder_ = null;
        }
        if (lowerBoundBuilder_ == null) {
          lowerBound_ = null;
        } else {
          lowerBound_ = null;
          lowerBoundBuilder_ = null;
        }
        if (upperBoundBuilder_ == null) {
          upperBound_ = null;
        } else {
          upperBound_ = null;
          upperBoundBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature(this);
        if (typeParametersBuilder_ == null) {
          result.typeParameters_ = typeParameters_;
        } else {
          result.typeParameters_ = typeParametersBuilder_.build();
        }
        if (lowerBoundBuilder_ == null) {
          result.lowerBound_ = lowerBound_;
        } else {
          result.lowerBound_ = lowerBoundBuilder_.build();
        }
        if (upperBoundBuilder_ == null) {
          result.upperBound_ = upperBound_;
        } else {
          result.upperBound_ = upperBoundBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature.getDefaultInstance()) return this;
        if (other.hasTypeParameters()) {
          mergeTypeParameters(other.getTypeParameters());
        }
        if (other.hasLowerBound()) {
          mergeLowerBound(other.getLowerBound());
        }
        if (other.hasUpperBound()) {
          mergeUpperBound(other.getUpperBound());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope typeParameters_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder> typeParametersBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       * @return Whether the typeParameters field is set.
       */
      public boolean hasTypeParameters() {
        return typeParametersBuilder_ != null || typeParameters_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       * @return The typeParameters.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getTypeParameters() {
        if (typeParametersBuilder_ == null) {
          return typeParameters_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
        } else {
          return typeParametersBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder setTypeParameters(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (typeParametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeParameters_ = value;
          onChanged();
        } else {
          typeParametersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder setTypeParameters(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (typeParametersBuilder_ == null) {
          typeParameters_ = builderForValue.build();
          onChanged();
        } else {
          typeParametersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder mergeTypeParameters(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (typeParametersBuilder_ == null) {
          if (typeParameters_ != null) {
            typeParameters_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.newBuilder(typeParameters_).mergeFrom(value).buildPartial();
          } else {
            typeParameters_ = value;
          }
          onChanged();
        } else {
          typeParametersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public Builder clearTypeParameters() {
        if (typeParametersBuilder_ == null) {
          typeParameters_ = null;
          onChanged();
        } else {
          typeParameters_ = null;
          typeParametersBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder getTypeParametersBuilder() {

        onChanged();
        return getTypeParametersFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getTypeParametersOrBuilder() {
        if (typeParametersBuilder_ != null) {
          return typeParametersBuilder_.getMessageOrBuilder();
        } else {
          return typeParameters_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : typeParameters_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope type_parameters = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
          getTypeParametersFieldBuilder() {
        if (typeParametersBuilder_ == null) {
          typeParametersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>(
                  getTypeParameters(),
                  getParentForChildren(),
                  isClean());
          typeParameters_ = null;
        }
        return typeParametersBuilder_;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type lowerBound_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> lowerBoundBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       * @return Whether the lowerBound field is set.
       */
      public boolean hasLowerBound() {
        return lowerBoundBuilder_ != null || lowerBound_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       * @return The lowerBound.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getLowerBound() {
        if (lowerBoundBuilder_ == null) {
          return lowerBound_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : lowerBound_;
        } else {
          return lowerBoundBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       */
      public Builder setLowerBound(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (lowerBoundBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lowerBound_ = value;
          onChanged();
        } else {
          lowerBoundBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       */
      public Builder setLowerBound(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (lowerBoundBuilder_ == null) {
          lowerBound_ = builderForValue.build();
          onChanged();
        } else {
          lowerBoundBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       */
      public Builder mergeLowerBound(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (lowerBoundBuilder_ == null) {
          if (lowerBound_ != null) {
            lowerBound_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.newBuilder(lowerBound_).mergeFrom(value).buildPartial();
          } else {
            lowerBound_ = value;
          }
          onChanged();
        } else {
          lowerBoundBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       */
      public Builder clearLowerBound() {
        if (lowerBoundBuilder_ == null) {
          lowerBound_ = null;
          onChanged();
        } else {
          lowerBound_ = null;
          lowerBoundBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getLowerBoundBuilder() {

        onChanged();
        return getLowerBoundFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getLowerBoundOrBuilder() {
        if (lowerBoundBuilder_ != null) {
          return lowerBoundBuilder_.getMessageOrBuilder();
        } else {
          return lowerBound_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : lowerBound_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type lower_bound = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getLowerBoundFieldBuilder() {
        if (lowerBoundBuilder_ == null) {
          lowerBoundBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  getLowerBound(),
                  getParentForChildren(),
                  isClean());
          lowerBound_ = null;
        }
        return lowerBoundBuilder_;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type upperBound_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> upperBoundBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       * @return Whether the upperBound field is set.
       */
      public boolean hasUpperBound() {
        return upperBoundBuilder_ != null || upperBound_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       * @return The upperBound.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getUpperBound() {
        if (upperBoundBuilder_ == null) {
          return upperBound_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : upperBound_;
        } else {
          return upperBoundBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       */
      public Builder setUpperBound(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (upperBoundBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          upperBound_ = value;
          onChanged();
        } else {
          upperBoundBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       */
      public Builder setUpperBound(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (upperBoundBuilder_ == null) {
          upperBound_ = builderForValue.build();
          onChanged();
        } else {
          upperBoundBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       */
      public Builder mergeUpperBound(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (upperBoundBuilder_ == null) {
          if (upperBound_ != null) {
            upperBound_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.newBuilder(upperBound_).mergeFrom(value).buildPartial();
          } else {
            upperBound_ = value;
          }
          onChanged();
        } else {
          upperBoundBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       */
      public Builder clearUpperBound() {
        if (upperBoundBuilder_ == null) {
          upperBound_ = null;
          onChanged();
        } else {
          upperBound_ = null;
          upperBoundBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getUpperBoundBuilder() {

        onChanged();
        return getUpperBoundFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getUpperBoundOrBuilder() {
        if (upperBoundBuilder_ != null) {
          return upperBoundBuilder_.getMessageOrBuilder();
        } else {
          return upperBound_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : upperBound_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type upper_bound = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getUpperBoundFieldBuilder() {
        if (upperBoundBuilder_ == null) {
          upperBoundBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  getUpperBound(),
                  getParentForChildren(),
                  isClean());
          upperBound_ = null;
        }
        return upperBoundBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.TypeSignature)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.TypeSignature)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TypeSignature>
        PARSER = new com.google.protobuf.AbstractParser<TypeSignature>() {
      @java.lang.Override
      public TypeSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TypeSignature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TypeSignature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TypeSignature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeSignature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ValueSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.ValueSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return Whether the tpe field is set.
     */
    boolean hasTpe();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return The tpe.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTpe();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTpeOrBuilder();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ValueSignature}
   */
  public static final class ValueSignature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.ValueSignature)
      ValueSignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ValueSignature.newBuilder() to construct.
    private ValueSignature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ValueSignature() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ValueSignature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ValueSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder subBuilder = null;
              if (tpe_ != null) {
                subBuilder = tpe_.toBuilder();
              }
              tpe_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tpe_);
                tpe_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder.class);
    }

    public static final int TPE_FIELD_NUMBER = 1;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type tpe_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return Whether the tpe field is set.
     */
    @java.lang.Override
    public boolean hasTpe() {
      return tpe_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return The tpe.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTpe() {
      return tpe_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : tpe_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTpeOrBuilder() {
      return getTpe();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tpe_ != null) {
        output.writeMessage(1, getTpe());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tpe_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTpe());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) obj;

      if (hasTpe() != other.hasTpe()) return false;
      if (hasTpe()) {
        if (!getTpe()
            .equals(other.getTpe())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTpe()) {
        hash = (37 * hash) + TPE_FIELD_NUMBER;
        hash = (53 * hash) + getTpe().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ValueSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.ValueSignature)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tpeBuilder_ == null) {
          tpe_ = null;
        } else {
          tpe_ = null;
          tpeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature(this);
        if (tpeBuilder_ == null) {
          result.tpe_ = tpe_;
        } else {
          result.tpe_ = tpeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature.getDefaultInstance()) return this;
        if (other.hasTpe()) {
          mergeTpe(other.getTpe());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type tpe_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> tpeBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       * @return Whether the tpe field is set.
       */
      public boolean hasTpe() {
        return tpeBuilder_ != null || tpe_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       * @return The tpe.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTpe() {
        if (tpeBuilder_ == null) {
          return tpe_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : tpe_;
        } else {
          return tpeBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder setTpe(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (tpeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tpe_ = value;
          onChanged();
        } else {
          tpeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder setTpe(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (tpeBuilder_ == null) {
          tpe_ = builderForValue.build();
          onChanged();
        } else {
          tpeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder mergeTpe(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (tpeBuilder_ == null) {
          if (tpe_ != null) {
            tpe_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.newBuilder(tpe_).mergeFrom(value).buildPartial();
          } else {
            tpe_ = value;
          }
          onChanged();
        } else {
          tpeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder clearTpe() {
        if (tpeBuilder_ == null) {
          tpe_ = null;
          onChanged();
        } else {
          tpe_ = null;
          tpeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getTpeBuilder() {

        onChanged();
        return getTpeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTpeOrBuilder() {
        if (tpeBuilder_ != null) {
          return tpeBuilder_.getMessageOrBuilder();
        } else {
          return tpe_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : tpe_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getTpeFieldBuilder() {
        if (tpeBuilder_ == null) {
          tpeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  getTpe(),
                  getParentForChildren(),
                  isClean());
          tpe_ = null;
        }
        return tpeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.ValueSignature)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.ValueSignature)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ValueSignature>
        PARSER = new com.google.protobuf.AbstractParser<ValueSignature>() {
      @java.lang.Override
      public ValueSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ValueSignature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ValueSignature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ValueSignature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ValueSignature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SymbolInformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.SymbolInformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
     * @return The enum numeric value on the wire for language.
     */
    int getLanguageValue();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
     * @return The language.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language getLanguage();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
     * @return The enum numeric value on the wire for kind.
     */
    int getKindValue();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
     * @return The kind.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind getKind();

    /**
     * <code>int32 properties = 4;</code>
     * @return The properties.
     */
    int getProperties();

    /**
     * <code>string display_name = 5;</code>
     * @return The displayName.
     */
    java.lang.String getDisplayName();
    /**
     * <code>string display_name = 5;</code>
     * @return The bytes for displayName.
     */
    com.google.protobuf.ByteString
        getDisplayNameBytes();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
     * @return The signature.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature getSignature();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SignatureOrBuilder getSignatureOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
     * @return Whether the access field is set.
     */
    boolean hasAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
     * @return The access.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access getAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.AccessOrBuilder getAccessOrBuilder();

    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @return A list containing the overriddenSymbols.
     */
    java.util.List<java.lang.String>
        getOverriddenSymbolsList();
    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @return The count of overriddenSymbols.
     */
    int getOverriddenSymbolsCount();
    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @param index The index of the element to return.
     * @return The overriddenSymbols at the given index.
     */
    java.lang.String getOverriddenSymbols(int index);
    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @param index The index of the value to return.
     * @return The bytes of the overriddenSymbols at the given index.
     */
    com.google.protobuf.ByteString
        getOverriddenSymbolsBytes(int index);

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
     * @return Whether the documentation field is set.
     */
    boolean hasDocumentation();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
     * @return The documentation.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation getDocumentation();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.DocumentationOrBuilder getDocumentationOrBuilder();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.SymbolInformation}
   */
  public static final class SymbolInformation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.SymbolInformation)
      SymbolInformationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SymbolInformation.newBuilder() to construct.
    private SymbolInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolInformation() {
      symbol_ = "";
      language_ = 0;
      kind_ = 0;
      displayName_ = "";
      overriddenSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SymbolInformation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SymbolInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              kind_ = rawValue;
              break;
            }
            case 32: {

              properties_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              displayName_ = s;
              break;
            }
            case 128: {
              int rawValue = input.readEnum();

              language_ = rawValue;
              break;
            }
            case 138: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder subBuilder = null;
              if (signature_ != null) {
                subBuilder = signature_.toBuilder();
              }
              signature_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signature_);
                signature_ = subBuilder.buildPartial();
              }

              break;
            }
            case 146: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder subBuilder = null;
              if (access_ != null) {
                subBuilder = access_.toBuilder();
              }
              access_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(access_);
                access_ = subBuilder.buildPartial();
              }

              break;
            }
            case 154: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                overriddenSymbols_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              overriddenSymbols_.add(s);
              break;
            }
            case 162: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder subBuilder = null;
              if (documentation_ != null) {
                subBuilder = documentation_.toBuilder();
              }
              documentation_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(documentation_);
                documentation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          overriddenSymbols_ = overriddenSymbols_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder.class);
    }

    /**
     * Protobuf enum {@code com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind}
     */
    public enum Kind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_KIND = 0;</code>
       */
      UNKNOWN_KIND(0),
      /**
       * <code>LOCAL = 19;</code>
       */
      LOCAL(19),
      /**
       * <code>FIELD = 20;</code>
       */
      FIELD(20),
      /**
       * <code>METHOD = 3;</code>
       */
      METHOD(3),
      /**
       * <code>CONSTRUCTOR = 21;</code>
       */
      CONSTRUCTOR(21),
      /**
       * <code>TYPE = 7;</code>
       */
      TYPE(7),
      /**
       * <code>PARAMETER = 8;</code>
       */
      PARAMETER(8),
      /**
       * <code>TYPE_PARAMETER = 9;</code>
       */
      TYPE_PARAMETER(9),
      /**
       * <code>PACKAGE = 11;</code>
       */
      PACKAGE(11),
      /**
       * <code>CLASS = 13;</code>
       */
      CLASS(13),
      /**
       * <code>INTERFACE = 18;</code>
       */
      INTERFACE(18),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN_KIND = 0;</code>
       */
      public static final int UNKNOWN_KIND_VALUE = 0;
      /**
       * <code>LOCAL = 19;</code>
       */
      public static final int LOCAL_VALUE = 19;
      /**
       * <code>FIELD = 20;</code>
       */
      public static final int FIELD_VALUE = 20;
      /**
       * <code>METHOD = 3;</code>
       */
      public static final int METHOD_VALUE = 3;
      /**
       * <code>CONSTRUCTOR = 21;</code>
       */
      public static final int CONSTRUCTOR_VALUE = 21;
      /**
       * <code>TYPE = 7;</code>
       */
      public static final int TYPE_VALUE = 7;
      /**
       * <code>PARAMETER = 8;</code>
       */
      public static final int PARAMETER_VALUE = 8;
      /**
       * <code>TYPE_PARAMETER = 9;</code>
       */
      public static final int TYPE_PARAMETER_VALUE = 9;
      /**
       * <code>PACKAGE = 11;</code>
       */
      public static final int PACKAGE_VALUE = 11;
      /**
       * <code>CLASS = 13;</code>
       */
      public static final int CLASS_VALUE = 13;
      /**
       * <code>INTERFACE = 18;</code>
       */
      public static final int INTERFACE_VALUE = 18;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Kind valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Kind forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_KIND;
          case 19: return LOCAL;
          case 20: return FIELD;
          case 3: return METHOD;
          case 21: return CONSTRUCTOR;
          case 7: return TYPE;
          case 8: return PARAMETER;
          case 9: return TYPE_PARAMETER;
          case 11: return PACKAGE;
          case 13: return CLASS;
          case 18: return INTERFACE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Kind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
              public Kind findValueByNumber(int number) {
                return Kind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDescriptor().getEnumTypes().get(0);
      }

      private static final Kind[] VALUES = values();

      public static Kind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Kind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind)
    }

    /**
     * Protobuf enum {@code com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Property}
     */
    public enum Property
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_PROPERTY = 0;</code>
       */
      UNKNOWN_PROPERTY(0),
      /**
       * <code>ABSTRACT = 4;</code>
       */
      ABSTRACT(4),
      /**
       * <code>FINAL = 8;</code>
       */
      FINAL(8),
      /**
       * <code>SEALED = 16;</code>
       */
      SEALED(16),
      /**
       * <code>STATIC = 4096;</code>
       */
      STATIC(4096),
      /**
       * <code>ENUM = 16384;</code>
       */
      ENUM(16384),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN_PROPERTY = 0;</code>
       */
      public static final int UNKNOWN_PROPERTY_VALUE = 0;
      /**
       * <code>ABSTRACT = 4;</code>
       */
      public static final int ABSTRACT_VALUE = 4;
      /**
       * <code>FINAL = 8;</code>
       */
      public static final int FINAL_VALUE = 8;
      /**
       * <code>SEALED = 16;</code>
       */
      public static final int SEALED_VALUE = 16;
      /**
       * <code>STATIC = 4096;</code>
       */
      public static final int STATIC_VALUE = 4096;
      /**
       * <code>ENUM = 16384;</code>
       */
      public static final int ENUM_VALUE = 16384;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Property valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Property forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_PROPERTY;
          case 4: return ABSTRACT;
          case 8: return FINAL;
          case 16: return SEALED;
          case 4096: return STATIC;
          case 16384: return ENUM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Property>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Property> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Property>() {
              public Property findValueByNumber(int number) {
                return Property.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDescriptor().getEnumTypes().get(1);
      }

      private static final Property[] VALUES = values();

      public static Property valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Property(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Property)
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile java.lang.Object symbol_;
    /**
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANGUAGE_FIELD_NUMBER = 16;
    private int language_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
     * @return The enum numeric value on the wire for language.
     */
    @java.lang.Override public int getLanguageValue() {
      return language_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
     * @return The language.
     */
    @java.lang.Override public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language getLanguage() {
      @SuppressWarnings("deprecation")
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.valueOf(language_);
      return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNRECOGNIZED : result;
    }

    public static final int KIND_FIELD_NUMBER = 3;
    private int kind_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
     * @return The enum numeric value on the wire for kind.
     */
    @java.lang.Override public int getKindValue() {
      return kind_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
     * @return The kind.
     */
    @java.lang.Override public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind getKind() {
      @SuppressWarnings("deprecation")
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind.valueOf(kind_);
      return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind.UNRECOGNIZED : result;
    }

    public static final int PROPERTIES_FIELD_NUMBER = 4;
    private int properties_;
    /**
     * <code>int32 properties = 4;</code>
     * @return The properties.
     */
    @java.lang.Override
    public int getProperties() {
      return properties_;
    }

    public static final int DISPLAY_NAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object displayName_;
    /**
     * <code>string display_name = 5;</code>
     * @return The displayName.
     */
    @java.lang.Override
    public java.lang.String getDisplayName() {
      java.lang.Object ref = displayName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        displayName_ = s;
        return s;
      }
    }
    /**
     * <code>string display_name = 5;</code>
     * @return The bytes for displayName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      java.lang.Object ref = displayName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIGNATURE_FIELD_NUMBER = 17;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature signature_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
     * @return Whether the signature field is set.
     */
    @java.lang.Override
    public boolean hasSignature() {
      return signature_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature getSignature() {
      return signature_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.getDefaultInstance() : signature_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SignatureOrBuilder getSignatureOrBuilder() {
      return getSignature();
    }

    public static final int ACCESS_FIELD_NUMBER = 18;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access access_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
     * @return Whether the access field is set.
     */
    @java.lang.Override
    public boolean hasAccess() {
      return access_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
     * @return The access.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access getAccess() {
      return access_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.getDefaultInstance() : access_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.AccessOrBuilder getAccessOrBuilder() {
      return getAccess();
    }

    public static final int OVERRIDDEN_SYMBOLS_FIELD_NUMBER = 19;
    private com.google.protobuf.LazyStringList overriddenSymbols_;
    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @return A list containing the overriddenSymbols.
     */
    public com.google.protobuf.ProtocolStringList
        getOverriddenSymbolsList() {
      return overriddenSymbols_;
    }
    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @return The count of overriddenSymbols.
     */
    public int getOverriddenSymbolsCount() {
      return overriddenSymbols_.size();
    }
    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @param index The index of the element to return.
     * @return The overriddenSymbols at the given index.
     */
    public java.lang.String getOverriddenSymbols(int index) {
      return overriddenSymbols_.get(index);
    }
    /**
     * <code>repeated string overridden_symbols = 19;</code>
     * @param index The index of the value to return.
     * @return The bytes of the overriddenSymbols at the given index.
     */
    public com.google.protobuf.ByteString
        getOverriddenSymbolsBytes(int index) {
      return overriddenSymbols_.getByteString(index);
    }

    public static final int DOCUMENTATION_FIELD_NUMBER = 20;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation documentation_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
     * @return Whether the documentation field is set.
     */
    @java.lang.Override
    public boolean hasDocumentation() {
      return documentation_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
     * @return The documentation.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation getDocumentation() {
      return documentation_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.getDefaultInstance() : documentation_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.DocumentationOrBuilder getDocumentationOrBuilder() {
      return getDocumentation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (kind_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind.UNKNOWN_KIND.getNumber()) {
        output.writeEnum(3, kind_);
      }
      if (properties_ != 0) {
        output.writeInt32(4, properties_);
      }
      if (!getDisplayNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, displayName_);
      }
      if (language_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNKNOWN_LANGUAGE.getNumber()) {
        output.writeEnum(16, language_);
      }
      if (signature_ != null) {
        output.writeMessage(17, getSignature());
      }
      if (access_ != null) {
        output.writeMessage(18, getAccess());
      }
      for (int i = 0; i < overriddenSymbols_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 19, overriddenSymbols_.getRaw(i));
      }
      if (documentation_ != null) {
        output.writeMessage(20, getDocumentation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (kind_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind.UNKNOWN_KIND.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, kind_);
      }
      if (properties_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, properties_);
      }
      if (!getDisplayNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, displayName_);
      }
      if (language_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNKNOWN_LANGUAGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, language_);
      }
      if (signature_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getSignature());
      }
      if (access_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getAccess());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < overriddenSymbols_.size(); i++) {
          dataSize += computeStringSizeNoTag(overriddenSymbols_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getOverriddenSymbolsList().size();
      }
      if (documentation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getDocumentation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (language_ != other.language_) return false;
      if (kind_ != other.kind_) return false;
      if (getProperties()
          != other.getProperties()) return false;
      if (!getDisplayName()
          .equals(other.getDisplayName())) return false;
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (hasAccess() != other.hasAccess()) return false;
      if (hasAccess()) {
        if (!getAccess()
            .equals(other.getAccess())) return false;
      }
      if (!getOverriddenSymbolsList()
          .equals(other.getOverriddenSymbolsList())) return false;
      if (hasDocumentation() != other.hasDocumentation()) return false;
      if (hasDocumentation()) {
        if (!getDocumentation()
            .equals(other.getDocumentation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + language_;
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + kind_;
      hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getProperties();
      hash = (37 * hash) + DISPLAY_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDisplayName().hashCode();
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      if (hasAccess()) {
        hash = (37 * hash) + ACCESS_FIELD_NUMBER;
        hash = (53 * hash) + getAccess().hashCode();
      }
      if (getOverriddenSymbolsCount() > 0) {
        hash = (37 * hash) + OVERRIDDEN_SYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getOverriddenSymbolsList().hashCode();
      }
      if (hasDocumentation()) {
        hash = (37 * hash) + DOCUMENTATION_FIELD_NUMBER;
        hash = (53 * hash) + getDocumentation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.SymbolInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.SymbolInformation)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        language_ = 0;

        kind_ = 0;

        properties_ = 0;

        displayName_ = "";

        if (signatureBuilder_ == null) {
          signature_ = null;
        } else {
          signature_ = null;
          signatureBuilder_ = null;
        }
        if (accessBuilder_ == null) {
          access_ = null;
        } else {
          access_ = null;
          accessBuilder_ = null;
        }
        overriddenSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (documentationBuilder_ == null) {
          documentation_ = null;
        } else {
          documentation_ = null;
          documentationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation(this);
        int from_bitField0_ = bitField0_;
        result.symbol_ = symbol_;
        result.language_ = language_;
        result.kind_ = kind_;
        result.properties_ = properties_;
        result.displayName_ = displayName_;
        if (signatureBuilder_ == null) {
          result.signature_ = signature_;
        } else {
          result.signature_ = signatureBuilder_.build();
        }
        if (accessBuilder_ == null) {
          result.access_ = access_;
        } else {
          result.access_ = accessBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          overriddenSymbols_ = overriddenSymbols_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.overriddenSymbols_ = overriddenSymbols_;
        if (documentationBuilder_ == null) {
          result.documentation_ = documentation_;
        } else {
          result.documentation_ = documentationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.language_ != 0) {
          setLanguageValue(other.getLanguageValue());
        }
        if (other.kind_ != 0) {
          setKindValue(other.getKindValue());
        }
        if (other.getProperties() != 0) {
          setProperties(other.getProperties());
        }
        if (!other.getDisplayName().isEmpty()) {
          displayName_ = other.displayName_;
          onChanged();
        }
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        if (other.hasAccess()) {
          mergeAccess(other.getAccess());
        }
        if (!other.overriddenSymbols_.isEmpty()) {
          if (overriddenSymbols_.isEmpty()) {
            overriddenSymbols_ = other.overriddenSymbols_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOverriddenSymbolsIsMutable();
            overriddenSymbols_.addAll(other.overriddenSymbols_);
          }
          onChanged();
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object symbol_ = "";
      /**
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {

        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        symbol_ = value;
        onChanged();
        return this;
      }

      private int language_ = 0;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
       * @return The enum numeric value on the wire for language.
       */
      @java.lang.Override public int getLanguageValue() {
        return language_;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
       * @param value The enum numeric value on the wire for language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguageValue(int value) {

        language_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
       * @return The language.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language getLanguage() {
        @SuppressWarnings("deprecation")
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.valueOf(language_);
        return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
       * @param value The language to set.
       * @return This builder for chaining.
       */
      public Builder setLanguage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Language value) {
        if (value == null) {
          throw new NullPointerException();
        }

        language_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Language language = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearLanguage() {

        language_ = 0;
        onChanged();
        return this;
      }

      private int kind_ = 0;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
       * @return The enum numeric value on the wire for kind.
       */
      @java.lang.Override public int getKindValue() {
        return kind_;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
       * @param value The enum numeric value on the wire for kind to set.
       * @return This builder for chaining.
       */
      public Builder setKindValue(int value) {

        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
       * @return The kind.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind getKind() {
        @SuppressWarnings("deprecation")
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind.valueOf(kind_);
        return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }

        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolInformation.Kind kind = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {

        kind_ = 0;
        onChanged();
        return this;
      }

      private int properties_ ;
      /**
       * <code>int32 properties = 4;</code>
       * @return The properties.
       */
      @java.lang.Override
      public int getProperties() {
        return properties_;
      }
      /**
       * <code>int32 properties = 4;</code>
       * @param value The properties to set.
       * @return This builder for chaining.
       */
      public Builder setProperties(int value) {

        properties_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 properties = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearProperties() {

        properties_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object displayName_ = "";
      /**
       * <code>string display_name = 5;</code>
       * @return The displayName.
       */
      public java.lang.String getDisplayName() {
        java.lang.Object ref = displayName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          displayName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string display_name = 5;</code>
       * @return The bytes for displayName.
       */
      public com.google.protobuf.ByteString
          getDisplayNameBytes() {
        java.lang.Object ref = displayName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string display_name = 5;</code>
       * @param value The displayName to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        displayName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string display_name = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisplayName() {

        displayName_ = getDefaultInstance().getDisplayName();
        onChanged();
        return this;
      }
      /**
       * <code>string display_name = 5;</code>
       * @param value The bytes for displayName to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        displayName_ = value;
        onChanged();
        return this;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature signature_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SignatureOrBuilder> signatureBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return signatureBuilder_ != null || signature_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       * @return The signature.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature getSignature() {
        if (signatureBuilder_ == null) {
          return signature_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.getDefaultInstance() : signature_;
        } else {
          return signatureBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       */
      public Builder setSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature value) {
        if (signatureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signature_ = value;
          onChanged();
        } else {
          signatureBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       */
      public Builder setSignature(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder builderForValue) {
        if (signatureBuilder_ == null) {
          signature_ = builderForValue.build();
          onChanged();
        } else {
          signatureBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       */
      public Builder mergeSignature(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature value) {
        if (signatureBuilder_ == null) {
          if (signature_ != null) {
            signature_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.newBuilder(signature_).mergeFrom(value).buildPartial();
          } else {
            signature_ = value;
          }
          onChanged();
        } else {
          signatureBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       */
      public Builder clearSignature() {
        if (signatureBuilder_ == null) {
          signature_ = null;
          onChanged();
        } else {
          signature_ = null;
          signatureBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder getSignatureBuilder() {

        onChanged();
        return getSignatureFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SignatureOrBuilder getSignatureOrBuilder() {
        if (signatureBuilder_ != null) {
          return signatureBuilder_.getMessageOrBuilder();
        } else {
          return signature_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.getDefaultInstance() : signature_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Signature signature = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SignatureOrBuilder>
          getSignatureFieldBuilder() {
        if (signatureBuilder_ == null) {
          signatureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Signature.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SignatureOrBuilder>(
                  getSignature(),
                  getParentForChildren(),
                  isClean());
          signature_ = null;
        }
        return signatureBuilder_;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access access_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.AccessOrBuilder> accessBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       * @return Whether the access field is set.
       */
      public boolean hasAccess() {
        return accessBuilder_ != null || access_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       * @return The access.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access getAccess() {
        if (accessBuilder_ == null) {
          return access_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.getDefaultInstance() : access_;
        } else {
          return accessBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       */
      public Builder setAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access value) {
        if (accessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          access_ = value;
          onChanged();
        } else {
          accessBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       */
      public Builder setAccess(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder builderForValue) {
        if (accessBuilder_ == null) {
          access_ = builderForValue.build();
          onChanged();
        } else {
          accessBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       */
      public Builder mergeAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access value) {
        if (accessBuilder_ == null) {
          if (access_ != null) {
            access_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.newBuilder(access_).mergeFrom(value).buildPartial();
          } else {
            access_ = value;
          }
          onChanged();
        } else {
          accessBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       */
      public Builder clearAccess() {
        if (accessBuilder_ == null) {
          access_ = null;
          onChanged();
        } else {
          access_ = null;
          accessBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder getAccessBuilder() {

        onChanged();
        return getAccessFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.AccessOrBuilder getAccessOrBuilder() {
        if (accessBuilder_ != null) {
          return accessBuilder_.getMessageOrBuilder();
        } else {
          return access_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.getDefaultInstance() : access_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Access access = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.AccessOrBuilder>
          getAccessFieldBuilder() {
        if (accessBuilder_ == null) {
          accessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.AccessOrBuilder>(
                  getAccess(),
                  getParentForChildren(),
                  isClean());
          access_ = null;
        }
        return accessBuilder_;
      }

      private com.google.protobuf.LazyStringList overriddenSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOverriddenSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          overriddenSymbols_ = new com.google.protobuf.LazyStringArrayList(overriddenSymbols_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @return A list containing the overriddenSymbols.
       */
      public com.google.protobuf.ProtocolStringList
          getOverriddenSymbolsList() {
        return overriddenSymbols_.getUnmodifiableView();
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @return The count of overriddenSymbols.
       */
      public int getOverriddenSymbolsCount() {
        return overriddenSymbols_.size();
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @param index The index of the element to return.
       * @return The overriddenSymbols at the given index.
       */
      public java.lang.String getOverriddenSymbols(int index) {
        return overriddenSymbols_.get(index);
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @param index The index of the value to return.
       * @return The bytes of the overriddenSymbols at the given index.
       */
      public com.google.protobuf.ByteString
          getOverriddenSymbolsBytes(int index) {
        return overriddenSymbols_.getByteString(index);
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @param index The index to set the value at.
       * @param value The overriddenSymbols to set.
       * @return This builder for chaining.
       */
      public Builder setOverriddenSymbols(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOverriddenSymbolsIsMutable();
        overriddenSymbols_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @param value The overriddenSymbols to add.
       * @return This builder for chaining.
       */
      public Builder addOverriddenSymbols(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOverriddenSymbolsIsMutable();
        overriddenSymbols_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @param values The overriddenSymbols to add.
       * @return This builder for chaining.
       */
      public Builder addAllOverriddenSymbols(
          java.lang.Iterable<java.lang.String> values) {
        ensureOverriddenSymbolsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, overriddenSymbols_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverriddenSymbols() {
        overriddenSymbols_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string overridden_symbols = 19;</code>
       * @param value The bytes of the overriddenSymbols to add.
       * @return This builder for chaining.
       */
      public Builder addOverriddenSymbolsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureOverriddenSymbolsIsMutable();
        overriddenSymbols_.add(value);
        onChanged();
        return this;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation documentation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.DocumentationOrBuilder> documentationBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       * @return Whether the documentation field is set.
       */
      public boolean hasDocumentation() {
        return documentationBuilder_ != null || documentation_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       * @return The documentation.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation getDocumentation() {
        if (documentationBuilder_ == null) {
          return documentation_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.getDefaultInstance() : documentation_;
        } else {
          return documentationBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       */
      public Builder setDocumentation(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation value) {
        if (documentationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          documentation_ = value;
          onChanged();
        } else {
          documentationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       */
      public Builder setDocumentation(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder builderForValue) {
        if (documentationBuilder_ == null) {
          documentation_ = builderForValue.build();
          onChanged();
        } else {
          documentationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       */
      public Builder mergeDocumentation(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation value) {
        if (documentationBuilder_ == null) {
          if (documentation_ != null) {
            documentation_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.newBuilder(documentation_).mergeFrom(value).buildPartial();
          } else {
            documentation_ = value;
          }
          onChanged();
        } else {
          documentationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       */
      public Builder clearDocumentation() {
        if (documentationBuilder_ == null) {
          documentation_ = null;
          onChanged();
        } else {
          documentation_ = null;
          documentationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder getDocumentationBuilder() {

        onChanged();
        return getDocumentationFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.DocumentationOrBuilder getDocumentationOrBuilder() {
        if (documentationBuilder_ != null) {
          return documentationBuilder_.getMessageOrBuilder();
        } else {
          return documentation_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.getDefaultInstance() : documentation_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation documentation = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.DocumentationOrBuilder>
          getDocumentationFieldBuilder() {
        if (documentationBuilder_ == null) {
          documentationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.DocumentationOrBuilder>(
                  getDocumentation(),
                  getParentForChildren(),
                  isClean());
          documentation_ = null;
        }
        return documentationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.SymbolInformation)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.SymbolInformation)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SymbolInformation>
        PARSER = new com.google.protobuf.AbstractParser<SymbolInformation>() {
      @java.lang.Override
      public SymbolInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SymbolInformation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SymbolInformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolInformation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.Access)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
     * @return Whether the privateAccess field is set.
     */
    boolean hasPrivateAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
     * @return The privateAccess.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess getPrivateAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccessOrBuilder getPrivateAccessOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
     * @return Whether the privateWithinAccess field is set.
     */
    boolean hasPrivateWithinAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
     * @return The privateWithinAccess.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess getPrivateWithinAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccessOrBuilder getPrivateWithinAccessOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
     * @return Whether the protectedAccess field is set.
     */
    boolean hasProtectedAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
     * @return The protectedAccess.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess getProtectedAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccessOrBuilder getProtectedAccessOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
     * @return Whether the publicAccess field is set.
     */
    boolean hasPublicAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
     * @return The publicAccess.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess getPublicAccess();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccessOrBuilder getPublicAccessOrBuilder();

    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.SealedValueCase getSealedValueCase();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Access}
   */
  public static final class Access extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.Access)
      AccessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Access.newBuilder() to construct.
    private Access(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Access() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Access();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Access(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder subBuilder = null;
              if (sealedValueCase_ == 1) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 1;
              break;
            }
            case 26: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder subBuilder = null;
              if (sealedValueCase_ == 3) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 3;
              break;
            }
            case 34: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder subBuilder = null;
              if (sealedValueCase_ == 4) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 4;
              break;
            }
            case 58: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder subBuilder = null;
              if (sealedValueCase_ == 7) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 7;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Access_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Access_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder.class);
    }

    private int sealedValueCase_ = 0;
    private java.lang.Object sealedValue_;
    public enum SealedValueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      PRIVATE_ACCESS(1),
      PRIVATE_WITHIN_ACCESS(3),
      PROTECTED_ACCESS(4),
      PUBLIC_ACCESS(7),
      SEALEDVALUE_NOT_SET(0);
      private final int value;
      private SealedValueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SealedValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static SealedValueCase forNumber(int value) {
        switch (value) {
          case 1: return PRIVATE_ACCESS;
          case 3: return PRIVATE_WITHIN_ACCESS;
          case 4: return PROTECTED_ACCESS;
          case 7: return PUBLIC_ACCESS;
          case 0: return SEALEDVALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SealedValueCase
    getSealedValueCase() {
      return SealedValueCase.forNumber(
          sealedValueCase_);
    }

    public static final int PRIVATE_ACCESS_FIELD_NUMBER = 1;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
     * @return Whether the privateAccess field is set.
     */
    @java.lang.Override
    public boolean hasPrivateAccess() {
      return sealedValueCase_ == 1;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
     * @return The privateAccess.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess getPrivateAccess() {
      if (sealedValueCase_ == 1) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccessOrBuilder getPrivateAccessOrBuilder() {
      if (sealedValueCase_ == 1) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance();
    }

    public static final int PRIVATE_WITHIN_ACCESS_FIELD_NUMBER = 3;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
     * @return Whether the privateWithinAccess field is set.
     */
    @java.lang.Override
    public boolean hasPrivateWithinAccess() {
      return sealedValueCase_ == 3;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
     * @return The privateWithinAccess.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess getPrivateWithinAccess() {
      if (sealedValueCase_ == 3) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccessOrBuilder getPrivateWithinAccessOrBuilder() {
      if (sealedValueCase_ == 3) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance();
    }

    public static final int PROTECTED_ACCESS_FIELD_NUMBER = 4;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
     * @return Whether the protectedAccess field is set.
     */
    @java.lang.Override
    public boolean hasProtectedAccess() {
      return sealedValueCase_ == 4;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
     * @return The protectedAccess.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess getProtectedAccess() {
      if (sealedValueCase_ == 4) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccessOrBuilder getProtectedAccessOrBuilder() {
      if (sealedValueCase_ == 4) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance();
    }

    public static final int PUBLIC_ACCESS_FIELD_NUMBER = 7;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
     * @return Whether the publicAccess field is set.
     */
    @java.lang.Override
    public boolean hasPublicAccess() {
      return sealedValueCase_ == 7;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
     * @return The publicAccess.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess getPublicAccess() {
      if (sealedValueCase_ == 7) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccessOrBuilder getPublicAccessOrBuilder() {
      if (sealedValueCase_ == 7) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sealedValueCase_ == 1) {
        output.writeMessage(1, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_);
      }
      if (sealedValueCase_ == 3) {
        output.writeMessage(3, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_);
      }
      if (sealedValueCase_ == 4) {
        output.writeMessage(4, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_);
      }
      if (sealedValueCase_ == 7) {
        output.writeMessage(7, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sealedValueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_);
      }
      if (sealedValueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_);
      }
      if (sealedValueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_);
      }
      if (sealedValueCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access) obj;

      if (!getSealedValueCase().equals(other.getSealedValueCase())) return false;
      switch (sealedValueCase_) {
        case 1:
          if (!getPrivateAccess()
              .equals(other.getPrivateAccess())) return false;
          break;
        case 3:
          if (!getPrivateWithinAccess()
              .equals(other.getPrivateWithinAccess())) return false;
          break;
        case 4:
          if (!getProtectedAccess()
              .equals(other.getProtectedAccess())) return false;
          break;
        case 7:
          if (!getPublicAccess()
              .equals(other.getPublicAccess())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (sealedValueCase_) {
        case 1:
          hash = (37 * hash) + PRIVATE_ACCESS_FIELD_NUMBER;
          hash = (53 * hash) + getPrivateAccess().hashCode();
          break;
        case 3:
          hash = (37 * hash) + PRIVATE_WITHIN_ACCESS_FIELD_NUMBER;
          hash = (53 * hash) + getPrivateWithinAccess().hashCode();
          break;
        case 4:
          hash = (37 * hash) + PROTECTED_ACCESS_FIELD_NUMBER;
          hash = (53 * hash) + getProtectedAccess().hashCode();
          break;
        case 7:
          hash = (37 * hash) + PUBLIC_ACCESS_FIELD_NUMBER;
          hash = (53 * hash) + getPublicAccess().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Access}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.Access)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.AccessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Access_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Access_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sealedValueCase_ = 0;
        sealedValue_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Access_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access(this);
        if (sealedValueCase_ == 1) {
          if (privateAccessBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = privateAccessBuilder_.build();
          }
        }
        if (sealedValueCase_ == 3) {
          if (privateWithinAccessBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = privateWithinAccessBuilder_.build();
          }
        }
        if (sealedValueCase_ == 4) {
          if (protectedAccessBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = protectedAccessBuilder_.build();
          }
        }
        if (sealedValueCase_ == 7) {
          if (publicAccessBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = publicAccessBuilder_.build();
          }
        }
        result.sealedValueCase_ = sealedValueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access.getDefaultInstance()) return this;
        switch (other.getSealedValueCase()) {
          case PRIVATE_ACCESS: {
            mergePrivateAccess(other.getPrivateAccess());
            break;
          }
          case PRIVATE_WITHIN_ACCESS: {
            mergePrivateWithinAccess(other.getPrivateWithinAccess());
            break;
          }
          case PROTECTED_ACCESS: {
            mergeProtectedAccess(other.getProtectedAccess());
            break;
          }
          case PUBLIC_ACCESS: {
            mergePublicAccess(other.getPublicAccess());
            break;
          }
          case SEALEDVALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sealedValueCase_ = 0;
      private java.lang.Object sealedValue_;
      public SealedValueCase
          getSealedValueCase() {
        return SealedValueCase.forNumber(
            sealedValueCase_);
      }

      public Builder clearSealedValue() {
        sealedValueCase_ = 0;
        sealedValue_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccessOrBuilder> privateAccessBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       * @return Whether the privateAccess field is set.
       */
      @java.lang.Override
      public boolean hasPrivateAccess() {
        return sealedValueCase_ == 1;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       * @return The privateAccess.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess getPrivateAccess() {
        if (privateAccessBuilder_ == null) {
          if (sealedValueCase_ == 1) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 1) {
            return privateAccessBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       */
      public Builder setPrivateAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess value) {
        if (privateAccessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          privateAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       */
      public Builder setPrivateAccess(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder builderForValue) {
        if (privateAccessBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          privateAccessBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       */
      public Builder mergePrivateAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess value) {
        if (privateAccessBuilder_ == null) {
          if (sealedValueCase_ == 1 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 1) {
            privateAccessBuilder_.mergeFrom(value);
          }
          privateAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 1;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       */
      public Builder clearPrivateAccess() {
        if (privateAccessBuilder_ == null) {
          if (sealedValueCase_ == 1) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 1) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          privateAccessBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder getPrivateAccessBuilder() {
        return getPrivateAccessFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccessOrBuilder getPrivateAccessOrBuilder() {
        if ((sealedValueCase_ == 1) && (privateAccessBuilder_ != null)) {
          return privateAccessBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 1) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateAccess private_access = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccessOrBuilder>
          getPrivateAccessFieldBuilder() {
        if (privateAccessBuilder_ == null) {
          if (!(sealedValueCase_ == 1)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance();
          }
          privateAccessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccessOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 1;
        onChanged();;
        return privateAccessBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccessOrBuilder> privateWithinAccessBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       * @return Whether the privateWithinAccess field is set.
       */
      @java.lang.Override
      public boolean hasPrivateWithinAccess() {
        return sealedValueCase_ == 3;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       * @return The privateWithinAccess.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess getPrivateWithinAccess() {
        if (privateWithinAccessBuilder_ == null) {
          if (sealedValueCase_ == 3) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 3) {
            return privateWithinAccessBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       */
      public Builder setPrivateWithinAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess value) {
        if (privateWithinAccessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          privateWithinAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       */
      public Builder setPrivateWithinAccess(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder builderForValue) {
        if (privateWithinAccessBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          privateWithinAccessBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       */
      public Builder mergePrivateWithinAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess value) {
        if (privateWithinAccessBuilder_ == null) {
          if (sealedValueCase_ == 3 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 3) {
            privateWithinAccessBuilder_.mergeFrom(value);
          }
          privateWithinAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 3;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       */
      public Builder clearPrivateWithinAccess() {
        if (privateWithinAccessBuilder_ == null) {
          if (sealedValueCase_ == 3) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 3) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          privateWithinAccessBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder getPrivateWithinAccessBuilder() {
        return getPrivateWithinAccessFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccessOrBuilder getPrivateWithinAccessOrBuilder() {
        if ((sealedValueCase_ == 3) && (privateWithinAccessBuilder_ != null)) {
          return privateWithinAccessBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 3) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess private_within_access = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccessOrBuilder>
          getPrivateWithinAccessFieldBuilder() {
        if (privateWithinAccessBuilder_ == null) {
          if (!(sealedValueCase_ == 3)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance();
          }
          privateWithinAccessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccessOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 3;
        onChanged();;
        return privateWithinAccessBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccessOrBuilder> protectedAccessBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       * @return Whether the protectedAccess field is set.
       */
      @java.lang.Override
      public boolean hasProtectedAccess() {
        return sealedValueCase_ == 4;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       * @return The protectedAccess.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess getProtectedAccess() {
        if (protectedAccessBuilder_ == null) {
          if (sealedValueCase_ == 4) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 4) {
            return protectedAccessBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       */
      public Builder setProtectedAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess value) {
        if (protectedAccessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          protectedAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       */
      public Builder setProtectedAccess(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder builderForValue) {
        if (protectedAccessBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          protectedAccessBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       */
      public Builder mergeProtectedAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess value) {
        if (protectedAccessBuilder_ == null) {
          if (sealedValueCase_ == 4 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 4) {
            protectedAccessBuilder_.mergeFrom(value);
          }
          protectedAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 4;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       */
      public Builder clearProtectedAccess() {
        if (protectedAccessBuilder_ == null) {
          if (sealedValueCase_ == 4) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 4) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          protectedAccessBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder getProtectedAccessBuilder() {
        return getProtectedAccessFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccessOrBuilder getProtectedAccessOrBuilder() {
        if ((sealedValueCase_ == 4) && (protectedAccessBuilder_ != null)) {
          return protectedAccessBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 4) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ProtectedAccess protected_access = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccessOrBuilder>
          getProtectedAccessFieldBuilder() {
        if (protectedAccessBuilder_ == null) {
          if (!(sealedValueCase_ == 4)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance();
          }
          protectedAccessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccessOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 4;
        onChanged();;
        return protectedAccessBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccessOrBuilder> publicAccessBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       * @return Whether the publicAccess field is set.
       */
      @java.lang.Override
      public boolean hasPublicAccess() {
        return sealedValueCase_ == 7;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       * @return The publicAccess.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess getPublicAccess() {
        if (publicAccessBuilder_ == null) {
          if (sealedValueCase_ == 7) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 7) {
            return publicAccessBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       */
      public Builder setPublicAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess value) {
        if (publicAccessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          publicAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       */
      public Builder setPublicAccess(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder builderForValue) {
        if (publicAccessBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          publicAccessBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       */
      public Builder mergePublicAccess(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess value) {
        if (publicAccessBuilder_ == null) {
          if (sealedValueCase_ == 7 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 7) {
            publicAccessBuilder_.mergeFrom(value);
          }
          publicAccessBuilder_.setMessage(value);
        }
        sealedValueCase_ = 7;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       */
      public Builder clearPublicAccess() {
        if (publicAccessBuilder_ == null) {
          if (sealedValueCase_ == 7) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 7) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          publicAccessBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder getPublicAccessBuilder() {
        return getPublicAccessFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccessOrBuilder getPublicAccessOrBuilder() {
        if ((sealedValueCase_ == 7) && (publicAccessBuilder_ != null)) {
          return publicAccessBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 7) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.PublicAccess public_access = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccessOrBuilder>
          getPublicAccessFieldBuilder() {
        if (publicAccessBuilder_ == null) {
          if (!(sealedValueCase_ == 7)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance();
          }
          publicAccessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccessOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 7;
        onChanged();;
        return publicAccessBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.Access)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.Access)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Access>
        PARSER = new com.google.protobuf.AbstractParser<Access>() {
      @java.lang.Override
      public Access parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Access(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Access> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Access> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Access getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PrivateAccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.PrivateAccess)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.PrivateAccess}
   */
  public static final class PrivateAccess extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.PrivateAccess)
      PrivateAccessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PrivateAccess.newBuilder() to construct.
    private PrivateAccess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PrivateAccess() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PrivateAccess();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PrivateAccess(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.PrivateAccess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.PrivateAccess)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.PrivateAccess)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.PrivateAccess)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PrivateAccess>
        PARSER = new com.google.protobuf.AbstractParser<PrivateAccess>() {
      @java.lang.Override
      public PrivateAccess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrivateAccess(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PrivateAccess> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PrivateAccess> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateAccess getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PrivateWithinAccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess}
   */
  public static final class PrivateWithinAccess extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess)
      PrivateWithinAccessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PrivateWithinAccess.newBuilder() to construct.
    private PrivateWithinAccess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PrivateWithinAccess() {
      symbol_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PrivateWithinAccess();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PrivateWithinAccess(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile java.lang.Object symbol_;
    /**
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess(this);
        result.symbol_ = symbol_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess.getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {

        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        symbol_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.PrivateWithinAccess)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PrivateWithinAccess>
        PARSER = new com.google.protobuf.AbstractParser<PrivateWithinAccess>() {
      @java.lang.Override
      public PrivateWithinAccess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrivateWithinAccess(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PrivateWithinAccess> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PrivateWithinAccess> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PrivateWithinAccess getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtectedAccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.ProtectedAccess)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ProtectedAccess}
   */
  public static final class ProtectedAccess extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.ProtectedAccess)
      ProtectedAccessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtectedAccess.newBuilder() to construct.
    private ProtectedAccess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtectedAccess() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtectedAccess();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProtectedAccess(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ProtectedAccess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.ProtectedAccess)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.ProtectedAccess)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.ProtectedAccess)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtectedAccess>
        PARSER = new com.google.protobuf.AbstractParser<ProtectedAccess>() {
      @java.lang.Override
      public ProtectedAccess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtectedAccess(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProtectedAccess> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtectedAccess> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ProtectedAccess getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PublicAccessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.PublicAccess)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.PublicAccess}
   */
  public static final class PublicAccess extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.PublicAccess)
      PublicAccessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PublicAccess.newBuilder() to construct.
    private PublicAccess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PublicAccess() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PublicAccess();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PublicAccess(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.PublicAccess}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.PublicAccess)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.PublicAccess)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.PublicAccess)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PublicAccess>
        PARSER = new com.google.protobuf.AbstractParser<PublicAccess>() {
      @java.lang.Override
      public PublicAccess parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PublicAccess(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PublicAccess> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PublicAccess> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.PublicAccess getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DocumentationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.Documentation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string message = 1;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 1;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
     * @return The enum numeric value on the wire for format.
     */
    int getFormatValue();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
     * @return The format.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format getFormat();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Documentation}
   */
  public static final class Documentation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.Documentation)
      DocumentationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Documentation.newBuilder() to construct.
    private Documentation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Documentation() {
      message_ = "";
      format_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Documentation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Documentation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              format_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder.class);
    }

    /**
     * Protobuf enum {@code com.sourcegraph.semanticdb_kotlinc.Documentation.Format}
     */
    public enum Format
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HTML = 0;</code>
       */
      HTML(0),
      /**
       * <code>MARKDOWN = 1;</code>
       */
      MARKDOWN(1),
      /**
       * <code>JAVADOC = 2;</code>
       */
      JAVADOC(2),
      /**
       * <code>SCALADOC = 3;</code>
       */
      SCALADOC(3),
      /**
       * <code>KDOC = 4;</code>
       */
      KDOC(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>HTML = 0;</code>
       */
      public static final int HTML_VALUE = 0;
      /**
       * <code>MARKDOWN = 1;</code>
       */
      public static final int MARKDOWN_VALUE = 1;
      /**
       * <code>JAVADOC = 2;</code>
       */
      public static final int JAVADOC_VALUE = 2;
      /**
       * <code>SCALADOC = 3;</code>
       */
      public static final int SCALADOC_VALUE = 3;
      /**
       * <code>KDOC = 4;</code>
       */
      public static final int KDOC_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Format valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Format forNumber(int value) {
        switch (value) {
          case 0: return HTML;
          case 1: return MARKDOWN;
          case 2: return JAVADOC;
          case 3: return SCALADOC;
          case 4: return KDOC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Format>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Format> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Format>() {
              public Format findValueByNumber(int number) {
                return Format.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.getDescriptor().getEnumTypes().get(0);
      }

      private static final Format[] VALUES = values();

      public static Format valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Format(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.sourcegraph.semanticdb_kotlinc.Documentation.Format)
    }

    public static final int MESSAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 1;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 1;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FORMAT_FIELD_NUMBER = 2;
    private int format_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
     * @return The enum numeric value on the wire for format.
     */
    @java.lang.Override public int getFormatValue() {
      return format_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
     * @return The format.
     */
    @java.lang.Override public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format getFormat() {
      @SuppressWarnings("deprecation")
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format.valueOf(format_);
      return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
      }
      if (format_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format.HTML.getNumber()) {
        output.writeEnum(2, format_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
      }
      if (format_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format.HTML.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, format_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation) obj;

      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (format_ != other.format_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (37 * hash) + FORMAT_FIELD_NUMBER;
      hash = (53 * hash) + format_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Documentation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.Documentation)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.DocumentationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        message_ = "";

        format_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation(this);
        result.message_ = message_;
        result.format_ = format_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.getDefaultInstance()) return this;
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        if (other.format_ != 0) {
          setFormatValue(other.getFormatValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 1;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 1;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {

        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 1;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        message_ = value;
        onChanged();
        return this;
      }

      private int format_ = 0;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
       * @return The enum numeric value on the wire for format.
       */
      @java.lang.Override public int getFormatValue() {
        return format_;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
       * @param value The enum numeric value on the wire for format to set.
       * @return This builder for chaining.
       */
      public Builder setFormatValue(int value) {

        format_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
       * @return The format.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format getFormat() {
        @SuppressWarnings("deprecation")
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format.valueOf(format_);
        return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
       * @param value The format to set.
       * @return This builder for chaining.
       */
      public Builder setFormat(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation.Format value) {
        if (value == null) {
          throw new NullPointerException();
        }

        format_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Documentation.Format format = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormat() {

        format_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.Documentation)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.Documentation)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Documentation>
        PARSER = new com.google.protobuf.AbstractParser<Documentation>() {
      @java.lang.Override
      public Documentation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Documentation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Documentation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Documentation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Documentation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SymbolOccurrenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
     * @return Whether the range field is set.
     */
    boolean hasRange();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
     * @return The range.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range getRange();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.RangeOrBuilder getRangeOrBuilder();

    /**
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
     * @return The enum numeric value on the wire for role.
     */
    int getRoleValue();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
     * @return The role.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role getRole();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence}
   */
  public static final class SymbolOccurrence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence)
      SymbolOccurrenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SymbolOccurrence.newBuilder() to construct.
    private SymbolOccurrence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SymbolOccurrence() {
      symbol_ = "";
      role_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SymbolOccurrence();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SymbolOccurrence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder subBuilder = null;
              if (range_ != null) {
                subBuilder = range_.toBuilder();
              }
              range_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(range_);
                range_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              role_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder.class);
    }

    /**
     * Protobuf enum {@code com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role}
     */
    public enum Role
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_ROLE = 0;</code>
       */
      UNKNOWN_ROLE(0),
      /**
       * <code>REFERENCE = 1;</code>
       */
      REFERENCE(1),
      /**
       * <code>DEFINITION = 2;</code>
       */
      DEFINITION(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN_ROLE = 0;</code>
       */
      public static final int UNKNOWN_ROLE_VALUE = 0;
      /**
       * <code>REFERENCE = 1;</code>
       */
      public static final int REFERENCE_VALUE = 1;
      /**
       * <code>DEFINITION = 2;</code>
       */
      public static final int DEFINITION_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Role valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Role forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_ROLE;
          case 1: return REFERENCE;
          case 2: return DEFINITION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Role>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Role> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Role>() {
              public Role findValueByNumber(int number) {
                return Role.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.getDescriptor().getEnumTypes().get(0);
      }

      private static final Role[] VALUES = values();

      public static Role valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Role(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role)
    }

    public static final int RANGE_FIELD_NUMBER = 1;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range range_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
     * @return Whether the range field is set.
     */
    @java.lang.Override
    public boolean hasRange() {
      return range_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
     * @return The range.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range getRange() {
      return range_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.getDefaultInstance() : range_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.RangeOrBuilder getRangeOrBuilder() {
      return getRange();
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private volatile java.lang.Object symbol_;
    /**
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROLE_FIELD_NUMBER = 3;
    private int role_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
     * @return The enum numeric value on the wire for role.
     */
    @java.lang.Override public int getRoleValue() {
      return role_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
     * @return The role.
     */
    @java.lang.Override public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role getRole() {
      @SuppressWarnings("deprecation")
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role.valueOf(role_);
      return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (range_ != null) {
        output.writeMessage(1, getRange());
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, symbol_);
      }
      if (role_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role.UNKNOWN_ROLE.getNumber()) {
        output.writeEnum(3, role_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (range_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRange());
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, symbol_);
      }
      if (role_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role.UNKNOWN_ROLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, role_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence) obj;

      if (hasRange() != other.hasRange()) return false;
      if (hasRange()) {
        if (!getRange()
            .equals(other.getRange())) return false;
      }
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (role_ != other.role_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRange()) {
        hash = (37 * hash) + RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getRange().hashCode();
      }
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + ROLE_FIELD_NUMBER;
      hash = (53 * hash) + role_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rangeBuilder_ == null) {
          range_ = null;
        } else {
          range_ = null;
          rangeBuilder_ = null;
        }
        symbol_ = "";

        role_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence(this);
        if (rangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = rangeBuilder_.build();
        }
        result.symbol_ = symbol_;
        result.role_ = role_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.getDefaultInstance()) return this;
        if (other.hasRange()) {
          mergeRange(other.getRange());
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.role_ != 0) {
          setRoleValue(other.getRoleValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range range_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.RangeOrBuilder> rangeBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       * @return Whether the range field is set.
       */
      public boolean hasRange() {
        return rangeBuilder_ != null || range_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       * @return The range.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range getRange() {
        if (rangeBuilder_ == null) {
          return range_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.getDefaultInstance() : range_;
        } else {
          return rangeBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       */
      public Builder setRange(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range value) {
        if (rangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          range_ = value;
          onChanged();
        } else {
          rangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       */
      public Builder setRange(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder builderForValue) {
        if (rangeBuilder_ == null) {
          range_ = builderForValue.build();
          onChanged();
        } else {
          rangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       */
      public Builder mergeRange(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range value) {
        if (rangeBuilder_ == null) {
          if (range_ != null) {
            range_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.newBuilder(range_).mergeFrom(value).buildPartial();
          } else {
            range_ = value;
          }
          onChanged();
        } else {
          rangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       */
      public Builder clearRange() {
        if (rangeBuilder_ == null) {
          range_ = null;
          onChanged();
        } else {
          range_ = null;
          rangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder getRangeBuilder() {

        onChanged();
        return getRangeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.RangeOrBuilder getRangeOrBuilder() {
        if (rangeBuilder_ != null) {
          return rangeBuilder_.getMessageOrBuilder();
        } else {
          return range_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.getDefaultInstance() : range_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Range range = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.RangeOrBuilder>
          getRangeFieldBuilder() {
        if (rangeBuilder_ == null) {
          rangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Range.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.RangeOrBuilder>(
                  getRange(),
                  getParentForChildren(),
                  isClean());
          range_ = null;
        }
        return rangeBuilder_;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {

        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        symbol_ = value;
        onChanged();
        return this;
      }

      private int role_ = 0;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
       * @return The enum numeric value on the wire for role.
       */
      @java.lang.Override public int getRoleValue() {
        return role_;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
       * @param value The enum numeric value on the wire for role to set.
       * @return This builder for chaining.
       */
      public Builder setRoleValue(int value) {

        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
       * @return The role.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role getRole() {
        @SuppressWarnings("deprecation")
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role result = com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role.valueOf(role_);
        return result == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role.UNRECOGNIZED : result;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
       * @param value The role to set.
       * @return This builder for chaining.
       */
      public Builder setRole(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence.Role value) {
        if (value == null) {
          throw new NullPointerException();
        }

        role_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence.Role role = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRole() {

        role_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.SymbolOccurrence)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SymbolOccurrence>
        PARSER = new com.google.protobuf.AbstractParser<SymbolOccurrence>() {
      @java.lang.Override
      public SymbolOccurrence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SymbolOccurrence(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SymbolOccurrence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolOccurrence> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolOccurrence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScopeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.Scope)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string symlinks = 1;</code>
     * @return A list containing the symlinks.
     */
    java.util.List<java.lang.String>
        getSymlinksList();
    /**
     * <code>repeated string symlinks = 1;</code>
     * @return The count of symlinks.
     */
    int getSymlinksCount();
    /**
     * <code>repeated string symlinks = 1;</code>
     * @param index The index of the element to return.
     * @return The symlinks at the given index.
     */
    java.lang.String getSymlinks(int index);
    /**
     * <code>repeated string symlinks = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the symlinks at the given index.
     */
    com.google.protobuf.ByteString
        getSymlinksBytes(int index);

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation>
        getHardlinksList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getHardlinks(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    int getHardlinksCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
        getHardlinksOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder getHardlinksOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Scope}
   */
  public static final class Scope extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.Scope)
      ScopeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Scope.newBuilder() to construct.
    private Scope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Scope() {
      symlinks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      hardlinks_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Scope();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Scope(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                symlinks_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              symlinks_.add(s);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                hardlinks_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              hardlinks_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          symlinks_ = symlinks_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          hardlinks_ = java.util.Collections.unmodifiableList(hardlinks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder.class);
    }

    public static final int SYMLINKS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList symlinks_;
    /**
     * <code>repeated string symlinks = 1;</code>
     * @return A list containing the symlinks.
     */
    public com.google.protobuf.ProtocolStringList
        getSymlinksList() {
      return symlinks_;
    }
    /**
     * <code>repeated string symlinks = 1;</code>
     * @return The count of symlinks.
     */
    public int getSymlinksCount() {
      return symlinks_.size();
    }
    /**
     * <code>repeated string symlinks = 1;</code>
     * @param index The index of the element to return.
     * @return The symlinks at the given index.
     */
    public java.lang.String getSymlinks(int index) {
      return symlinks_.get(index);
    }
    /**
     * <code>repeated string symlinks = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the symlinks at the given index.
     */
    public com.google.protobuf.ByteString
        getSymlinksBytes(int index) {
      return symlinks_.getByteString(index);
    }

    public static final int HARDLINKS_FIELD_NUMBER = 2;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> hardlinks_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> getHardlinksList() {
      return hardlinks_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
        getHardlinksOrBuilderList() {
      return hardlinks_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    @java.lang.Override
    public int getHardlinksCount() {
      return hardlinks_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getHardlinks(int index) {
      return hardlinks_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder getHardlinksOrBuilder(
        int index) {
      return hardlinks_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < symlinks_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symlinks_.getRaw(i));
      }
      for (int i = 0; i < hardlinks_.size(); i++) {
        output.writeMessage(2, hardlinks_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < symlinks_.size(); i++) {
          dataSize += computeStringSizeNoTag(symlinks_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSymlinksList().size();
      }
      for (int i = 0; i < hardlinks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, hardlinks_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope) obj;

      if (!getSymlinksList()
          .equals(other.getSymlinksList())) return false;
      if (!getHardlinksList()
          .equals(other.getHardlinksList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSymlinksCount() > 0) {
        hash = (37 * hash) + SYMLINKS_FIELD_NUMBER;
        hash = (53 * hash) + getSymlinksList().hashCode();
      }
      if (getHardlinksCount() > 0) {
        hash = (37 * hash) + HARDLINKS_FIELD_NUMBER;
        hash = (53 * hash) + getHardlinksList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Scope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.Scope)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHardlinksFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        symlinks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (hardlinksBuilder_ == null) {
          hardlinks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          hardlinksBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          symlinks_ = symlinks_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.symlinks_ = symlinks_;
        if (hardlinksBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            hardlinks_ = java.util.Collections.unmodifiableList(hardlinks_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.hardlinks_ = hardlinks_;
        } else {
          result.hardlinks_ = hardlinksBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance()) return this;
        if (!other.symlinks_.isEmpty()) {
          if (symlinks_.isEmpty()) {
            symlinks_ = other.symlinks_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSymlinksIsMutable();
            symlinks_.addAll(other.symlinks_);
          }
          onChanged();
        }
        if (hardlinksBuilder_ == null) {
          if (!other.hardlinks_.isEmpty()) {
            if (hardlinks_.isEmpty()) {
              hardlinks_ = other.hardlinks_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHardlinksIsMutable();
              hardlinks_.addAll(other.hardlinks_);
            }
            onChanged();
          }
        } else {
          if (!other.hardlinks_.isEmpty()) {
            if (hardlinksBuilder_.isEmpty()) {
              hardlinksBuilder_.dispose();
              hardlinksBuilder_ = null;
              hardlinks_ = other.hardlinks_;
              bitField0_ = (bitField0_ & ~0x00000002);
              hardlinksBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHardlinksFieldBuilder() : null;
            } else {
              hardlinksBuilder_.addAllMessages(other.hardlinks_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList symlinks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSymlinksIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          symlinks_ = new com.google.protobuf.LazyStringArrayList(symlinks_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @return A list containing the symlinks.
       */
      public com.google.protobuf.ProtocolStringList
          getSymlinksList() {
        return symlinks_.getUnmodifiableView();
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @return The count of symlinks.
       */
      public int getSymlinksCount() {
        return symlinks_.size();
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @param index The index of the element to return.
       * @return The symlinks at the given index.
       */
      public java.lang.String getSymlinks(int index) {
        return symlinks_.get(index);
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the symlinks at the given index.
       */
      public com.google.protobuf.ByteString
          getSymlinksBytes(int index) {
        return symlinks_.getByteString(index);
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @param index The index to set the value at.
       * @param value The symlinks to set.
       * @return This builder for chaining.
       */
      public Builder setSymlinks(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSymlinksIsMutable();
        symlinks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @param value The symlinks to add.
       * @return This builder for chaining.
       */
      public Builder addSymlinks(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSymlinksIsMutable();
        symlinks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @param values The symlinks to add.
       * @return This builder for chaining.
       */
      public Builder addAllSymlinks(
          java.lang.Iterable<java.lang.String> values) {
        ensureSymlinksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, symlinks_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymlinks() {
        symlinks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string symlinks = 1;</code>
       * @param value The bytes of the symlinks to add.
       * @return This builder for chaining.
       */
      public Builder addSymlinksBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSymlinksIsMutable();
        symlinks_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> hardlinks_ =
        java.util.Collections.emptyList();
      private void ensureHardlinksIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          hardlinks_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation>(hardlinks_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder> hardlinksBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> getHardlinksList() {
        if (hardlinksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hardlinks_);
        } else {
          return hardlinksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public int getHardlinksCount() {
        if (hardlinksBuilder_ == null) {
          return hardlinks_.size();
        } else {
          return hardlinksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation getHardlinks(int index) {
        if (hardlinksBuilder_ == null) {
          return hardlinks_.get(index);
        } else {
          return hardlinksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder setHardlinks(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation value) {
        if (hardlinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardlinksIsMutable();
          hardlinks_.set(index, value);
          onChanged();
        } else {
          hardlinksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder setHardlinks(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder builderForValue) {
        if (hardlinksBuilder_ == null) {
          ensureHardlinksIsMutable();
          hardlinks_.set(index, builderForValue.build());
          onChanged();
        } else {
          hardlinksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder addHardlinks(com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation value) {
        if (hardlinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardlinksIsMutable();
          hardlinks_.add(value);
          onChanged();
        } else {
          hardlinksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder addHardlinks(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation value) {
        if (hardlinksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHardlinksIsMutable();
          hardlinks_.add(index, value);
          onChanged();
        } else {
          hardlinksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder addHardlinks(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder builderForValue) {
        if (hardlinksBuilder_ == null) {
          ensureHardlinksIsMutable();
          hardlinks_.add(builderForValue.build());
          onChanged();
        } else {
          hardlinksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder addHardlinks(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder builderForValue) {
        if (hardlinksBuilder_ == null) {
          ensureHardlinksIsMutable();
          hardlinks_.add(index, builderForValue.build());
          onChanged();
        } else {
          hardlinksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder addAllHardlinks(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation> values) {
        if (hardlinksBuilder_ == null) {
          ensureHardlinksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hardlinks_);
          onChanged();
        } else {
          hardlinksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder clearHardlinks() {
        if (hardlinksBuilder_ == null) {
          hardlinks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          hardlinksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public Builder removeHardlinks(int index) {
        if (hardlinksBuilder_ == null) {
          ensureHardlinksIsMutable();
          hardlinks_.remove(index);
          onChanged();
        } else {
          hardlinksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder getHardlinksBuilder(
          int index) {
        return getHardlinksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder getHardlinksOrBuilder(
          int index) {
        if (hardlinksBuilder_ == null) {
          return hardlinks_.get(index);  } else {
          return hardlinksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
           getHardlinksOrBuilderList() {
        if (hardlinksBuilder_ != null) {
          return hardlinksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hardlinks_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder addHardlinksBuilder() {
        return getHardlinksFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder addHardlinksBuilder(
          int index) {
        return getHardlinksFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.SymbolInformation hardlinks = 2;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder>
           getHardlinksBuilderList() {
        return getHardlinksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>
          getHardlinksFieldBuilder() {
        if (hardlinksBuilder_ == null) {
          hardlinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformation.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.SymbolInformationOrBuilder>(
                  hardlinks_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          hardlinks_ = null;
        }
        return hardlinksBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.Scope)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.Scope)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Scope>
        PARSER = new com.google.protobuf.AbstractParser<Scope>() {
      @java.lang.Override
      public Scope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Scope(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Scope> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Scope> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.Type)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
     * @return Whether the typeRef field is set.
     */
    boolean hasTypeRef();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
     * @return The typeRef.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef getTypeRef();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRefOrBuilder getTypeRefOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
     * @return Whether the existentialType field is set.
     */
    boolean hasExistentialType();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
     * @return The existentialType.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType getExistentialType();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialTypeOrBuilder getExistentialTypeOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
     * @return Whether the intersectionType field is set.
     */
    boolean hasIntersectionType();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
     * @return The intersectionType.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType getIntersectionType();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionTypeOrBuilder getIntersectionTypeOrBuilder();

    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.SealedValueCase getSealedValueCase();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Type}
   */
  public static final class Type extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.Type)
      TypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Type.newBuilder() to construct.
    private Type(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Type() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Type();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Type(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder subBuilder = null;
              if (sealedValueCase_ == 2) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 2;
              break;
            }
            case 74: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder subBuilder = null;
              if (sealedValueCase_ == 9) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 9;
              break;
            }
            case 138: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder subBuilder = null;
              if (sealedValueCase_ == 17) {
                subBuilder = ((com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_).toBuilder();
              }
              sealedValue_ =
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_);
                sealedValue_ = subBuilder.buildPartial();
              }
              sealedValueCase_ = 17;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Type_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Type_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder.class);
    }

    private int sealedValueCase_ = 0;
    private java.lang.Object sealedValue_;
    public enum SealedValueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      TYPE_REF(2),
      EXISTENTIAL_TYPE(9),
      INTERSECTION_TYPE(17),
      SEALEDVALUE_NOT_SET(0);
      private final int value;
      private SealedValueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SealedValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static SealedValueCase forNumber(int value) {
        switch (value) {
          case 2: return TYPE_REF;
          case 9: return EXISTENTIAL_TYPE;
          case 17: return INTERSECTION_TYPE;
          case 0: return SEALEDVALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SealedValueCase
    getSealedValueCase() {
      return SealedValueCase.forNumber(
          sealedValueCase_);
    }

    public static final int TYPE_REF_FIELD_NUMBER = 2;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
     * @return Whether the typeRef field is set.
     */
    @java.lang.Override
    public boolean hasTypeRef() {
      return sealedValueCase_ == 2;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
     * @return The typeRef.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef getTypeRef() {
      if (sealedValueCase_ == 2) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRefOrBuilder getTypeRefOrBuilder() {
      if (sealedValueCase_ == 2) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance();
    }

    public static final int EXISTENTIAL_TYPE_FIELD_NUMBER = 9;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
     * @return Whether the existentialType field is set.
     */
    @java.lang.Override
    public boolean hasExistentialType() {
      return sealedValueCase_ == 9;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
     * @return The existentialType.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType getExistentialType() {
      if (sealedValueCase_ == 9) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialTypeOrBuilder getExistentialTypeOrBuilder() {
      if (sealedValueCase_ == 9) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance();
    }

    public static final int INTERSECTION_TYPE_FIELD_NUMBER = 17;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
     * @return Whether the intersectionType field is set.
     */
    @java.lang.Override
    public boolean hasIntersectionType() {
      return sealedValueCase_ == 17;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
     * @return The intersectionType.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType getIntersectionType() {
      if (sealedValueCase_ == 17) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance();
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionTypeOrBuilder getIntersectionTypeOrBuilder() {
      if (sealedValueCase_ == 17) {
         return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_;
      }
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sealedValueCase_ == 2) {
        output.writeMessage(2, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_);
      }
      if (sealedValueCase_ == 9) {
        output.writeMessage(9, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_);
      }
      if (sealedValueCase_ == 17) {
        output.writeMessage(17, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sealedValueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_);
      }
      if (sealedValueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_);
      }
      if (sealedValueCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type) obj;

      if (!getSealedValueCase().equals(other.getSealedValueCase())) return false;
      switch (sealedValueCase_) {
        case 2:
          if (!getTypeRef()
              .equals(other.getTypeRef())) return false;
          break;
        case 9:
          if (!getExistentialType()
              .equals(other.getExistentialType())) return false;
          break;
        case 17:
          if (!getIntersectionType()
              .equals(other.getIntersectionType())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (sealedValueCase_) {
        case 2:
          hash = (37 * hash) + TYPE_REF_FIELD_NUMBER;
          hash = (53 * hash) + getTypeRef().hashCode();
          break;
        case 9:
          hash = (37 * hash) + EXISTENTIAL_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getExistentialType().hashCode();
          break;
        case 17:
          hash = (37 * hash) + INTERSECTION_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getIntersectionType().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.Type}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.Type)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Type_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Type_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sealedValueCase_ = 0;
        sealedValue_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_Type_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type(this);
        if (sealedValueCase_ == 2) {
          if (typeRefBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = typeRefBuilder_.build();
          }
        }
        if (sealedValueCase_ == 9) {
          if (existentialTypeBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = existentialTypeBuilder_.build();
          }
        }
        if (sealedValueCase_ == 17) {
          if (intersectionTypeBuilder_ == null) {
            result.sealedValue_ = sealedValue_;
          } else {
            result.sealedValue_ = intersectionTypeBuilder_.build();
          }
        }
        result.sealedValueCase_ = sealedValueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance()) return this;
        switch (other.getSealedValueCase()) {
          case TYPE_REF: {
            mergeTypeRef(other.getTypeRef());
            break;
          }
          case EXISTENTIAL_TYPE: {
            mergeExistentialType(other.getExistentialType());
            break;
          }
          case INTERSECTION_TYPE: {
            mergeIntersectionType(other.getIntersectionType());
            break;
          }
          case SEALEDVALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sealedValueCase_ = 0;
      private java.lang.Object sealedValue_;
      public SealedValueCase
          getSealedValueCase() {
        return SealedValueCase.forNumber(
            sealedValueCase_);
      }

      public Builder clearSealedValue() {
        sealedValueCase_ = 0;
        sealedValue_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRefOrBuilder> typeRefBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       * @return Whether the typeRef field is set.
       */
      @java.lang.Override
      public boolean hasTypeRef() {
        return sealedValueCase_ == 2;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       * @return The typeRef.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef getTypeRef() {
        if (typeRefBuilder_ == null) {
          if (sealedValueCase_ == 2) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 2) {
            return typeRefBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       */
      public Builder setTypeRef(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef value) {
        if (typeRefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          typeRefBuilder_.setMessage(value);
        }
        sealedValueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       */
      public Builder setTypeRef(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder builderForValue) {
        if (typeRefBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          typeRefBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       */
      public Builder mergeTypeRef(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef value) {
        if (typeRefBuilder_ == null) {
          if (sealedValueCase_ == 2 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 2) {
            typeRefBuilder_.mergeFrom(value);
          }
          typeRefBuilder_.setMessage(value);
        }
        sealedValueCase_ = 2;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       */
      public Builder clearTypeRef() {
        if (typeRefBuilder_ == null) {
          if (sealedValueCase_ == 2) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 2) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          typeRefBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder getTypeRefBuilder() {
        return getTypeRefFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRefOrBuilder getTypeRefOrBuilder() {
        if ((sealedValueCase_ == 2) && (typeRefBuilder_ != null)) {
          return typeRefBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 2) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.TypeRef type_ref = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRefOrBuilder>
          getTypeRefFieldBuilder() {
        if (typeRefBuilder_ == null) {
          if (!(sealedValueCase_ == 2)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance();
          }
          typeRefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRefOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 2;
        onChanged();;
        return typeRefBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialTypeOrBuilder> existentialTypeBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       * @return Whether the existentialType field is set.
       */
      @java.lang.Override
      public boolean hasExistentialType() {
        return sealedValueCase_ == 9;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       * @return The existentialType.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType getExistentialType() {
        if (existentialTypeBuilder_ == null) {
          if (sealedValueCase_ == 9) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 9) {
            return existentialTypeBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       */
      public Builder setExistentialType(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType value) {
        if (existentialTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          existentialTypeBuilder_.setMessage(value);
        }
        sealedValueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       */
      public Builder setExistentialType(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder builderForValue) {
        if (existentialTypeBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          existentialTypeBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       */
      public Builder mergeExistentialType(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType value) {
        if (existentialTypeBuilder_ == null) {
          if (sealedValueCase_ == 9 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 9) {
            existentialTypeBuilder_.mergeFrom(value);
          }
          existentialTypeBuilder_.setMessage(value);
        }
        sealedValueCase_ = 9;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       */
      public Builder clearExistentialType() {
        if (existentialTypeBuilder_ == null) {
          if (sealedValueCase_ == 9) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 9) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          existentialTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder getExistentialTypeBuilder() {
        return getExistentialTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialTypeOrBuilder getExistentialTypeOrBuilder() {
        if ((sealedValueCase_ == 9) && (existentialTypeBuilder_ != null)) {
          return existentialTypeBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 9) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.ExistentialType existential_type = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialTypeOrBuilder>
          getExistentialTypeFieldBuilder() {
        if (existentialTypeBuilder_ == null) {
          if (!(sealedValueCase_ == 9)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance();
          }
          existentialTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialTypeOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 9;
        onChanged();;
        return existentialTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionTypeOrBuilder> intersectionTypeBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       * @return Whether the intersectionType field is set.
       */
      @java.lang.Override
      public boolean hasIntersectionType() {
        return sealedValueCase_ == 17;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       * @return The intersectionType.
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType getIntersectionType() {
        if (intersectionTypeBuilder_ == null) {
          if (sealedValueCase_ == 17) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance();
        } else {
          if (sealedValueCase_ == 17) {
            return intersectionTypeBuilder_.getMessage();
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       */
      public Builder setIntersectionType(com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType value) {
        if (intersectionTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sealedValue_ = value;
          onChanged();
        } else {
          intersectionTypeBuilder_.setMessage(value);
        }
        sealedValueCase_ = 17;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       */
      public Builder setIntersectionType(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder builderForValue) {
        if (intersectionTypeBuilder_ == null) {
          sealedValue_ = builderForValue.build();
          onChanged();
        } else {
          intersectionTypeBuilder_.setMessage(builderForValue.build());
        }
        sealedValueCase_ = 17;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       */
      public Builder mergeIntersectionType(com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType value) {
        if (intersectionTypeBuilder_ == null) {
          if (sealedValueCase_ == 17 &&
              sealedValue_ != com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance()) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.newBuilder((com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_)
                .mergeFrom(value).buildPartial();
          } else {
            sealedValue_ = value;
          }
          onChanged();
        } else {
          if (sealedValueCase_ == 17) {
            intersectionTypeBuilder_.mergeFrom(value);
          }
          intersectionTypeBuilder_.setMessage(value);
        }
        sealedValueCase_ = 17;
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       */
      public Builder clearIntersectionType() {
        if (intersectionTypeBuilder_ == null) {
          if (sealedValueCase_ == 17) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
            onChanged();
          }
        } else {
          if (sealedValueCase_ == 17) {
            sealedValueCase_ = 0;
            sealedValue_ = null;
          }
          intersectionTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder getIntersectionTypeBuilder() {
        return getIntersectionTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       */
      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionTypeOrBuilder getIntersectionTypeOrBuilder() {
        if ((sealedValueCase_ == 17) && (intersectionTypeBuilder_ != null)) {
          return intersectionTypeBuilder_.getMessageOrBuilder();
        } else {
          if (sealedValueCase_ == 17) {
            return (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_;
          }
          return com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.IntersectionType intersection_type = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionTypeOrBuilder>
          getIntersectionTypeFieldBuilder() {
        if (intersectionTypeBuilder_ == null) {
          if (!(sealedValueCase_ == 17)) {
            sealedValue_ = com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance();
          }
          intersectionTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionTypeOrBuilder>(
                  (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) sealedValue_,
                  getParentForChildren(),
                  isClean());
          sealedValue_ = null;
        }
        sealedValueCase_ = 17;
        onChanged();;
        return intersectionTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.Type)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.Type)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Type>
        PARSER = new com.google.protobuf.AbstractParser<Type>() {
      @java.lang.Override
      public Type parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Type(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Type> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Type> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TypeRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.TypeRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>
        getTypeArgumentsList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTypeArguments(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    int getTypeArgumentsCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
        getTypeArgumentsOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTypeArgumentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TypeRef}
   */
  public static final class TypeRef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.TypeRef)
      TypeRefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TypeRef.newBuilder() to construct.
    private TypeRef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TypeRef() {
      symbol_ = "";
      typeArguments_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TypeRef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TypeRef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                typeArguments_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>();
                mutable_bitField0_ |= 0x00000001;
              }
              typeArguments_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private volatile java.lang.Object symbol_;
    /**
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_ARGUMENTS_FIELD_NUMBER = 3;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> typeArguments_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> getTypeArgumentsList() {
      return typeArguments_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
        getTypeArgumentsOrBuilderList() {
      return typeArguments_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    @java.lang.Override
    public int getTypeArgumentsCount() {
      return typeArguments_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTypeArguments(int index) {
      return typeArguments_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTypeArgumentsOrBuilder(
        int index) {
      return typeArguments_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, symbol_);
      }
      for (int i = 0; i < typeArguments_.size(); i++) {
        output.writeMessage(3, typeArguments_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, symbol_);
      }
      for (int i = 0; i < typeArguments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, typeArguments_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (!getTypeArgumentsList()
          .equals(other.getTypeArgumentsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      if (getTypeArgumentsCount() > 0) {
        hash = (37 * hash) + TYPE_ARGUMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getTypeArgumentsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.TypeRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.TypeRef)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTypeArgumentsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        if (typeArgumentsBuilder_ == null) {
          typeArguments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          typeArgumentsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef(this);
        int from_bitField0_ = bitField0_;
        result.symbol_ = symbol_;
        if (typeArgumentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            typeArguments_ = java.util.Collections.unmodifiableList(typeArguments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.typeArguments_ = typeArguments_;
        } else {
          result.typeArguments_ = typeArgumentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef.getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (typeArgumentsBuilder_ == null) {
          if (!other.typeArguments_.isEmpty()) {
            if (typeArguments_.isEmpty()) {
              typeArguments_ = other.typeArguments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypeArgumentsIsMutable();
              typeArguments_.addAll(other.typeArguments_);
            }
            onChanged();
          }
        } else {
          if (!other.typeArguments_.isEmpty()) {
            if (typeArgumentsBuilder_.isEmpty()) {
              typeArgumentsBuilder_.dispose();
              typeArgumentsBuilder_ = null;
              typeArguments_ = other.typeArguments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              typeArgumentsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTypeArgumentsFieldBuilder() : null;
            } else {
              typeArgumentsBuilder_.addAllMessages(other.typeArguments_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object symbol_ = "";
      /**
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {

        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        symbol_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> typeArguments_ =
        java.util.Collections.emptyList();
      private void ensureTypeArgumentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          typeArguments_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>(typeArguments_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> typeArgumentsBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> getTypeArgumentsList() {
        if (typeArgumentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(typeArguments_);
        } else {
          return typeArgumentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public int getTypeArgumentsCount() {
        if (typeArgumentsBuilder_ == null) {
          return typeArguments_.size();
        } else {
          return typeArgumentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTypeArguments(int index) {
        if (typeArgumentsBuilder_ == null) {
          return typeArguments_.get(index);
        } else {
          return typeArgumentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder setTypeArguments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (typeArgumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeArgumentsIsMutable();
          typeArguments_.set(index, value);
          onChanged();
        } else {
          typeArgumentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder setTypeArguments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (typeArgumentsBuilder_ == null) {
          ensureTypeArgumentsIsMutable();
          typeArguments_.set(index, builderForValue.build());
          onChanged();
        } else {
          typeArgumentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder addTypeArguments(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (typeArgumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeArgumentsIsMutable();
          typeArguments_.add(value);
          onChanged();
        } else {
          typeArgumentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder addTypeArguments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (typeArgumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeArgumentsIsMutable();
          typeArguments_.add(index, value);
          onChanged();
        } else {
          typeArgumentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder addTypeArguments(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (typeArgumentsBuilder_ == null) {
          ensureTypeArgumentsIsMutable();
          typeArguments_.add(builderForValue.build());
          onChanged();
        } else {
          typeArgumentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder addTypeArguments(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (typeArgumentsBuilder_ == null) {
          ensureTypeArgumentsIsMutable();
          typeArguments_.add(index, builderForValue.build());
          onChanged();
        } else {
          typeArgumentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder addAllTypeArguments(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> values) {
        if (typeArgumentsBuilder_ == null) {
          ensureTypeArgumentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, typeArguments_);
          onChanged();
        } else {
          typeArgumentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder clearTypeArguments() {
        if (typeArgumentsBuilder_ == null) {
          typeArguments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          typeArgumentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public Builder removeTypeArguments(int index) {
        if (typeArgumentsBuilder_ == null) {
          ensureTypeArgumentsIsMutable();
          typeArguments_.remove(index);
          onChanged();
        } else {
          typeArgumentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getTypeArgumentsBuilder(
          int index) {
        return getTypeArgumentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTypeArgumentsOrBuilder(
          int index) {
        if (typeArgumentsBuilder_ == null) {
          return typeArguments_.get(index);  } else {
          return typeArgumentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
           getTypeArgumentsOrBuilderList() {
        if (typeArgumentsBuilder_ != null) {
          return typeArgumentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(typeArguments_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder addTypeArgumentsBuilder() {
        return getTypeArgumentsFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder addTypeArgumentsBuilder(
          int index) {
        return getTypeArgumentsFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type type_arguments = 3;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder>
           getTypeArgumentsBuilderList() {
        return getTypeArgumentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getTypeArgumentsFieldBuilder() {
        if (typeArgumentsBuilder_ == null) {
          typeArgumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  typeArguments_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          typeArguments_ = null;
        }
        return typeArgumentsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.TypeRef)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.TypeRef)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TypeRef>
        PARSER = new com.google.protobuf.AbstractParser<TypeRef>() {
      @java.lang.Override
      public TypeRef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TypeRef(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TypeRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TypeRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntersectionTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.IntersectionType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>
        getTypesList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTypes(int index);
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    int getTypesCount();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
        getTypesOrBuilderList();
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTypesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.IntersectionType}
   */
  public static final class IntersectionType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.IntersectionType)
      IntersectionTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IntersectionType.newBuilder() to construct.
    private IntersectionType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IntersectionType() {
      types_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IntersectionType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IntersectionType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                types_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>();
                mutable_bitField0_ |= 0x00000001;
              }
              types_.add(
                  input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          types_ = java.util.Collections.unmodifiableList(types_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder.class);
    }

    public static final int TYPES_FIELD_NUMBER = 1;
    private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> types_;
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> getTypesList() {
      return types_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
        getTypesOrBuilderList() {
      return types_;
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    @java.lang.Override
    public int getTypesCount() {
      return types_.size();
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTypes(int index) {
      return types_.get(index);
    }
    /**
     * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTypesOrBuilder(
        int index) {
      return types_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < types_.size(); i++) {
        output.writeMessage(1, types_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < types_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, types_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) obj;

      if (!getTypesList()
          .equals(other.getTypesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTypesCount() > 0) {
        hash = (37 * hash) + TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getTypesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.IntersectionType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.IntersectionType)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTypesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (typesBuilder_ == null) {
          types_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          typesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType(this);
        int from_bitField0_ = bitField0_;
        if (typesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            types_ = java.util.Collections.unmodifiableList(types_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.types_ = types_;
        } else {
          result.types_ = typesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType.getDefaultInstance()) return this;
        if (typesBuilder_ == null) {
          if (!other.types_.isEmpty()) {
            if (types_.isEmpty()) {
              types_ = other.types_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypesIsMutable();
              types_.addAll(other.types_);
            }
            onChanged();
          }
        } else {
          if (!other.types_.isEmpty()) {
            if (typesBuilder_.isEmpty()) {
              typesBuilder_.dispose();
              typesBuilder_ = null;
              types_ = other.types_;
              bitField0_ = (bitField0_ & ~0x00000001);
              typesBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTypesFieldBuilder() : null;
            } else {
              typesBuilder_.addAllMessages(other.types_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> types_ =
        java.util.Collections.emptyList();
      private void ensureTypesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          types_ = new java.util.ArrayList<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type>(types_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> typesBuilder_;

      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> getTypesList() {
        if (typesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(types_);
        } else {
          return typesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public int getTypesCount() {
        if (typesBuilder_ == null) {
          return types_.size();
        } else {
          return typesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTypes(int index) {
        if (typesBuilder_ == null) {
          return types_.get(index);
        } else {
          return typesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder setTypes(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (typesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.set(index, value);
          onChanged();
        } else {
          typesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder setTypes(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.set(index, builderForValue.build());
          onChanged();
        } else {
          typesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder addTypes(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (typesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.add(value);
          onChanged();
        } else {
          typesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder addTypes(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (typesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.add(index, value);
          onChanged();
        } else {
          typesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder addTypes(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.add(builderForValue.build());
          onChanged();
        } else {
          typesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder addTypes(
          int index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.add(index, builderForValue.build());
          onChanged();
        } else {
          typesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder addAllTypes(
          java.lang.Iterable<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type> values) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, types_);
          onChanged();
        } else {
          typesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder clearTypes() {
        if (typesBuilder_ == null) {
          types_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          typesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public Builder removeTypes(int index) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.remove(index);
          onChanged();
        } else {
          typesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getTypesBuilder(
          int index) {
        return getTypesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTypesOrBuilder(
          int index) {
        if (typesBuilder_ == null) {
          return types_.get(index);  } else {
          return typesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public java.util.List<? extends com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
           getTypesOrBuilderList() {
        if (typesBuilder_ != null) {
          return typesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(types_);
        }
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder addTypesBuilder() {
        return getTypesFieldBuilder().addBuilder(
            com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder addTypesBuilder(
          int index) {
        return getTypesFieldBuilder().addBuilder(
            index, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sourcegraph.semanticdb_kotlinc.Type types = 1;</code>
       */
      public java.util.List<com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder>
           getTypesBuilderList() {
        return getTypesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getTypesFieldBuilder() {
        if (typesBuilder_ == null) {
          typesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  types_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          types_ = null;
        }
        return typesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.IntersectionType)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.IntersectionType)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IntersectionType>
        PARSER = new com.google.protobuf.AbstractParser<IntersectionType>() {
      @java.lang.Override
      public IntersectionType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IntersectionType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IntersectionType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IntersectionType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.IntersectionType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExistentialTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.sourcegraph.semanticdb_kotlinc.ExistentialType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return Whether the tpe field is set.
     */
    boolean hasTpe();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return The tpe.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTpe();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTpeOrBuilder();

    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
     * @return Whether the declarations field is set.
     */
    boolean hasDeclarations();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
     * @return The declarations.
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDeclarations();
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
     */
    com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getDeclarationsOrBuilder();
  }
  /**
   * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ExistentialType}
   */
  public static final class ExistentialType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.sourcegraph.semanticdb_kotlinc.ExistentialType)
      ExistentialTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExistentialType.newBuilder() to construct.
    private ExistentialType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExistentialType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExistentialType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExistentialType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder subBuilder = null;
              if (tpe_ != null) {
                subBuilder = tpe_.toBuilder();
              }
              tpe_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tpe_);
                tpe_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder subBuilder = null;
              if (declarations_ != null) {
                subBuilder = declarations_.toBuilder();
              }
              declarations_ = input.readMessage(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(declarations_);
                declarations_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder.class);
    }

    public static final int TPE_FIELD_NUMBER = 1;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type tpe_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return Whether the tpe field is set.
     */
    @java.lang.Override
    public boolean hasTpe() {
      return tpe_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     * @return The tpe.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTpe() {
      return tpe_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : tpe_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTpeOrBuilder() {
      return getTpe();
    }

    public static final int DECLARATIONS_FIELD_NUMBER = 3;
    private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope declarations_;
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
     * @return Whether the declarations field is set.
     */
    @java.lang.Override
    public boolean hasDeclarations() {
      return declarations_ != null;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
     * @return The declarations.
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDeclarations() {
      return declarations_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : declarations_;
    }
    /**
     * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
     */
    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getDeclarationsOrBuilder() {
      return getDeclarations();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tpe_ != null) {
        output.writeMessage(1, getTpe());
      }
      if (declarations_ != null) {
        output.writeMessage(3, getDeclarations());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tpe_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTpe());
      }
      if (declarations_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDeclarations());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType)) {
        return super.equals(obj);
      }
      com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType other = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) obj;

      if (hasTpe() != other.hasTpe()) return false;
      if (hasTpe()) {
        if (!getTpe()
            .equals(other.getTpe())) return false;
      }
      if (hasDeclarations() != other.hasDeclarations()) return false;
      if (hasDeclarations()) {
        if (!getDeclarations()
            .equals(other.getDeclarations())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTpe()) {
        hash = (37 * hash) + TPE_FIELD_NUMBER;
        hash = (53 * hash) + getTpe().hashCode();
      }
      if (hasDeclarations()) {
        hash = (37 * hash) + DECLARATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDeclarations().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sourcegraph.semanticdb_kotlinc.ExistentialType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.sourcegraph.semanticdb_kotlinc.ExistentialType)
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.class, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.Builder.class);
      }

      // Construct using com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tpeBuilder_ == null) {
          tpe_ = null;
        } else {
          tpe_ = null;
          tpeBuilder_ = null;
        }
        if (declarationsBuilder_ == null) {
          declarations_ = null;
        } else {
          declarations_ = null;
          declarationsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_descriptor;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType getDefaultInstanceForType() {
        return com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance();
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType build() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType buildPartial() {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType result = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType(this);
        if (tpeBuilder_ == null) {
          result.tpe_ = tpe_;
        } else {
          result.tpe_ = tpeBuilder_.build();
        }
        if (declarationsBuilder_ == null) {
          result.declarations_ = declarations_;
        } else {
          result.declarations_ = declarationsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) {
          return mergeFrom((com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType other) {
        if (other == com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType.getDefaultInstance()) return this;
        if (other.hasTpe()) {
          mergeTpe(other.getTpe());
        }
        if (other.hasDeclarations()) {
          mergeDeclarations(other.getDeclarations());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type tpe_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder> tpeBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       * @return Whether the tpe field is set.
       */
      public boolean hasTpe() {
        return tpeBuilder_ != null || tpe_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       * @return The tpe.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type getTpe() {
        if (tpeBuilder_ == null) {
          return tpe_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : tpe_;
        } else {
          return tpeBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder setTpe(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (tpeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tpe_ = value;
          onChanged();
        } else {
          tpeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder setTpe(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder builderForValue) {
        if (tpeBuilder_ == null) {
          tpe_ = builderForValue.build();
          onChanged();
        } else {
          tpeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder mergeTpe(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type value) {
        if (tpeBuilder_ == null) {
          if (tpe_ != null) {
            tpe_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.newBuilder(tpe_).mergeFrom(value).buildPartial();
          } else {
            tpe_ = value;
          }
          onChanged();
        } else {
          tpeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public Builder clearTpe() {
        if (tpeBuilder_ == null) {
          tpe_ = null;
          onChanged();
        } else {
          tpe_ = null;
          tpeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder getTpeBuilder() {

        onChanged();
        return getTpeFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder getTpeOrBuilder() {
        if (tpeBuilder_ != null) {
          return tpeBuilder_.getMessageOrBuilder();
        } else {
          return tpe_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.getDefaultInstance() : tpe_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Type tpe = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>
          getTpeFieldBuilder() {
        if (tpeBuilder_ == null) {
          tpeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Type.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.TypeOrBuilder>(
                  getTpe(),
                  getParentForChildren(),
                  isClean());
          tpe_ = null;
        }
        return tpeBuilder_;
      }

      private com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope declarations_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder> declarationsBuilder_;
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       * @return Whether the declarations field is set.
       */
      public boolean hasDeclarations() {
        return declarationsBuilder_ != null || declarations_ != null;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       * @return The declarations.
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope getDeclarations() {
        if (declarationsBuilder_ == null) {
          return declarations_ == null ? com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : declarations_;
        } else {
          return declarationsBuilder_.getMessage();
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       */
      public Builder setDeclarations(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (declarationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          declarations_ = value;
          onChanged();
        } else {
          declarationsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       */
      public Builder setDeclarations(
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder builderForValue) {
        if (declarationsBuilder_ == null) {
          declarations_ = builderForValue.build();
          onChanged();
        } else {
          declarationsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       */
      public Builder mergeDeclarations(com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope value) {
        if (declarationsBuilder_ == null) {
          if (declarations_ != null) {
            declarations_ =
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.newBuilder(declarations_).mergeFrom(value).buildPartial();
          } else {
            declarations_ = value;
          }
          onChanged();
        } else {
          declarationsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       */
      public Builder clearDeclarations() {
        if (declarationsBuilder_ == null) {
          declarations_ = null;
          onChanged();
        } else {
          declarations_ = null;
          declarationsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder getDeclarationsBuilder() {

        onChanged();
        return getDeclarationsFieldBuilder().getBuilder();
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       */
      public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder getDeclarationsOrBuilder() {
        if (declarationsBuilder_ != null) {
          return declarationsBuilder_.getMessageOrBuilder();
        } else {
          return declarations_ == null ?
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.getDefaultInstance() : declarations_;
        }
      }
      /**
       * <code>.com.sourcegraph.semanticdb_kotlinc.Scope declarations = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>
          getDeclarationsFieldBuilder() {
        if (declarationsBuilder_ == null) {
          declarationsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope, com.sourcegraph.semanticdb_kotlinc.Semanticdb.Scope.Builder, com.sourcegraph.semanticdb_kotlinc.Semanticdb.ScopeOrBuilder>(
                  getDeclarations(),
                  getParentForChildren(),
                  isClean());
          declarations_ = null;
        }
        return declarationsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.sourcegraph.semanticdb_kotlinc.ExistentialType)
    }

    // @@protoc_insertion_point(class_scope:com.sourcegraph.semanticdb_kotlinc.ExistentialType)
    private static final com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType();
    }

    public static com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExistentialType>
        PARSER = new com.google.protobuf.AbstractParser<ExistentialType>() {
      @java.lang.Override
      public ExistentialType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExistentialType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExistentialType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExistentialType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.sourcegraph.semanticdb_kotlinc.Semanticdb.ExistentialType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_Range_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_Range_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_Access_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_Access_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_Type_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_Type_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2com.sourcegraph.semanticdb_kotlin/sema" +
      "nticdb.proto\022\"com.sourcegraph.semanticdb" +
      "_kotlinc\"T\n\rTextDocuments\022C\n\tdocuments\030\001" +
      " \003(\01320.com.sourcegraph.semanticdb_kotlin" +
      "c.TextDocument\"\327\002\n\014TextDocument\022:\n\006schem" +
      "a\030\001 \001(\0162*.com.sourcegraph.semanticdb_kot" +
      "linc.Schema\022\013\n\003uri\030\002 \001(\t\022\014\n\004text\030\003 \001(\t\022\013" +
      "\n\003md5\030\013 \001(\t\022>\n\010language\030\n \001(\0162,.com.sour" +
      "cegraph.semanticdb_kotlinc.Language\022F\n\007s" +
      "ymbols\030\005 \003(\01325.com.sourcegraph.semanticd" +
      "b_kotlinc.SymbolInformation\022I\n\013occurrenc" +
      "es\030\006 \003(\01324.com.sourcegraph.semanticdb_ko" +
      "tlinc.SymbolOccurrenceJ\004\010\004\020\005J\004\010\010\020\tJ\004\010\t\020\n" +
      "\"]\n\005Range\022\022\n\nstart_line\030\001 \001(\005\022\027\n\017start_c" +
      "haracter\030\002 \001(\005\022\020\n\010end_line\030\003 \001(\005\022\025\n\rend_" +
      "character\030\004 \001(\005\"\327\002\n\tSignature\022M\n\017class_s" +
      "ignature\030\001 \001(\01322.com.sourcegraph.semanti" +
      "cdb_kotlinc.ClassSignatureH\000\022O\n\020method_s" +
      "ignature\030\002 \001(\01323.com.sourcegraph.semanti" +
      "cdb_kotlinc.MethodSignatureH\000\022K\n\016type_si" +
      "gnature\030\003 \001(\01321.com.sourcegraph.semantic" +
      "db_kotlinc.TypeSignatureH\000\022M\n\017value_sign" +
      "ature\030\004 \001(\01322.com.sourcegraph.semanticdb" +
      "_kotlinc.ValueSignatureH\000B\016\n\014sealed_valu" +
      "e\"\320\001\n\016ClassSignature\022B\n\017type_parameters\030" +
      "\001 \001(\0132).com.sourcegraph.semanticdb_kotli" +
      "nc.Scope\0229\n\007parents\030\002 \003(\0132(.com.sourcegr" +
      "aph.semanticdb_kotlinc.Type\022?\n\014declarati" +
      "ons\030\004 \001(\0132).com.sourcegraph.semanticdb_k" +
      "otlinc.Scope\"\330\001\n\017MethodSignature\022B\n\017type" +
      "_parameters\030\001 \001(\0132).com.sourcegraph.sema" +
      "nticdb_kotlinc.Scope\022B\n\017parameter_lists\030" +
      "\002 \003(\0132).com.sourcegraph.semanticdb_kotli" +
      "nc.Scope\022=\n\013return_type\030\003 \001(\0132(.com.sour" +
      "cegraph.semanticdb_kotlinc.Type\"\321\001\n\rType" +
      "Signature\022B\n\017type_parameters\030\001 \001(\0132).com" +
      ".sourcegraph.semanticdb_kotlinc.Scope\022=\n" +
      "\013lower_bound\030\002 \001(\0132(.com.sourcegraph.sem" +
      "anticdb_kotlinc.Type\022=\n\013upper_bound\030\003 \001(" +
      "\0132(.com.sourcegraph.semanticdb_kotlinc.T" +
      "ype\"G\n\016ValueSignature\0225\n\003tpe\030\001 \001(\0132(.com" +
      ".sourcegraph.semanticdb_kotlinc.Type\"\251\006\n" +
      "\021SymbolInformation\022\016\n\006symbol\030\001 \001(\t\022>\n\010la" +
      "nguage\030\020 \001(\0162,.com.sourcegraph.semanticd" +
      "b_kotlinc.Language\022H\n\004kind\030\003 \001(\0162:.com.s" +
      "ourcegraph.semanticdb_kotlinc.SymbolInfo" +
      "rmation.Kind\022\022\n\nproperties\030\004 \001(\005\022\024\n\014disp" +
      "lay_name\030\005 \001(\t\022@\n\tsignature\030\021 \001(\0132-.com." +
      "sourcegraph.semanticdb_kotlinc.Signature" +
      "\022:\n\006access\030\022 \001(\0132*.com.sourcegraph.seman" +
      "ticdb_kotlinc.Access\022\032\n\022overridden_symbo" +
      "ls\030\023 \003(\t\022H\n\rdocumentation\030\024 \001(\01321.com.so" +
      "urcegraph.semanticdb_kotlinc.Documentati" +
      "on\"\303\001\n\004Kind\022\020\n\014UNKNOWN_KIND\020\000\022\t\n\005LOCAL\020\023" +
      "\022\t\n\005FIELD\020\024\022\n\n\006METHOD\020\003\022\017\n\013CONSTRUCTOR\020\025" +
      "\022\010\n\004TYPE\020\007\022\r\n\tPARAMETER\020\010\022\022\n\016TYPE_PARAME" +
      "TER\020\t\022\013\n\007PACKAGE\020\013\022\t\n\005CLASS\020\r\022\r\n\tINTERFA" +
      "CE\020\022\"\004\010\001\020\001\"\004\010\002\020\002\"\004\010\004\020\004\"\004\010\005\020\005\"\004\010\017\020\017\"\004\010\020\020\020" +
      "\"j\n\010Property\022\024\n\020UNKNOWN_PROPERTY\020\000\022\014\n\010AB" +
      "STRACT\020\004\022\t\n\005FINAL\020\010\022\n\n\006SEALED\020\020\022\013\n\006STATI" +
      "C\020\200 \022\n\n\004ENUM\020\200\200\001\"\004\010\001\020\001\"\004\010\002\020\002J\004\010\002\020\003J\004\010\006\020\007" +
      "J\004\010\007\020\010J\004\010\010\020\tJ\004\010\t\020\nJ\004\010\n\020\013J\004\010\013\020\014J\004\010\014\020\rJ\004\010\016" +
      "\020\017J\004\010\017\020\020\"\333\002\n\006Access\022K\n\016private_access\030\001 " +
      "\001(\01321.com.sourcegraph.semanticdb_kotlinc" +
      ".PrivateAccessH\000\022X\n\025private_within_acces" +
      "s\030\003 \001(\01327.com.sourcegraph.semanticdb_kot" +
      "linc.PrivateWithinAccessH\000\022O\n\020protected_" +
      "access\030\004 \001(\01323.com.sourcegraph.semanticd" +
      "b_kotlinc.ProtectedAccessH\000\022I\n\rpublic_ac" +
      "cess\030\007 \001(\01320.com.sourcegraph.semanticdb_" +
      "kotlinc.PublicAccessH\000B\016\n\014sealed_value\"\017" +
      "\n\rPrivateAccess\"%\n\023PrivateWithinAccess\022\016" +
      "\n\006symbol\030\001 \001(\t\"\021\n\017ProtectedAccess\"\016\n\014Pub" +
      "licAccess\"\261\001\n\rDocumentation\022\017\n\007message\030\001" +
      " \001(\t\022H\n\006format\030\002 \001(\01628.com.sourcegraph.s" +
      "emanticdb_kotlinc.Documentation.Format\"E" +
      "\n\006Format\022\010\n\004HTML\020\000\022\014\n\010MARKDOWN\020\001\022\013\n\007JAVA" +
      "DOC\020\002\022\014\n\010SCALADOC\020\003\022\010\n\004KDOC\020\004\"\336\001\n\020Symbol" +
      "Occurrence\0228\n\005range\030\001 \001(\0132).com.sourcegr" +
      "aph.semanticdb_kotlinc.Range\022\016\n\006symbol\030\002" +
      " \001(\t\022G\n\004role\030\003 \001(\01629.com.sourcegraph.sem" +
      "anticdb_kotlinc.SymbolOccurrence.Role\"7\n" +
      "\004Role\022\020\n\014UNKNOWN_ROLE\020\000\022\r\n\tREFERENCE\020\001\022\016" +
      "\n\nDEFINITION\020\002\"c\n\005Scope\022\020\n\010symlinks\030\001 \003(" +
      "\t\022H\n\thardlinks\030\002 \003(\01325.com.sourcegraph.s" +
      "emanticdb_kotlinc.SymbolInformation\"\261\002\n\004" +
      "Type\022?\n\010type_ref\030\002 \001(\0132+.com.sourcegraph" +
      ".semanticdb_kotlinc.TypeRefH\000\022O\n\020existen" +
      "tial_type\030\t \001(\01323.com.sourcegraph.semant" +
      "icdb_kotlinc.ExistentialTypeH\000\022Q\n\021inters" +
      "ection_type\030\021 \001(\01324.com.sourcegraph.sema" +
      "nticdb_kotlinc.IntersectionTypeH\000B\016\n\014sea" +
      "led_valueJ\004\010\001\020\002J\004\010\003\020\004J\004\010\004\020\005J\004\010\005\020\006J\004\010\006\020\007J" +
      "\004\010\013\020\014J\004\010\014\020\rJ\004\010\017\020\020J\004\010\020\020\021\"[\n\007TypeRef\022\016\n\006sy" +
      "mbol\030\002 \001(\t\022@\n\016type_arguments\030\003 \003(\0132(.com" +
      ".sourcegraph.semanticdb_kotlinc.Type\"K\n\020" +
      "IntersectionType\0227\n\005types\030\001 \003(\0132(.com.so" +
      "urcegraph.semanticdb_kotlinc.Type\"\217\001\n\017Ex" +
      "istentialType\0225\n\003tpe\030\001 \001(\0132(.com.sourceg" +
      "raph.semanticdb_kotlinc.Type\022?\n\014declarat" +
      "ions\030\003 \001(\0132).com.sourcegraph.semanticdb_" +
      "kotlinc.ScopeJ\004\010\002\020\003*6\n\006Schema\022\n\n\006LEGACY\020" +
      "\000\022\017\n\013SEMANTICDB3\020\003\022\017\n\013SEMANTICDB4\020\004*A\n\010L" +
      "anguage\022\024\n\020UNKNOWN_LANGUAGE\020\000\022\t\n\005SCALA\020\001" +
      "\022\010\n\004JAVA\020\002\022\n\n\006KOTLIN\020\003B&\n\"com.sourcegrap" +
      "h.semanticdb_kotlincP\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocuments_descriptor,
        new java.lang.String[] { "Documents", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_TextDocument_descriptor,
        new java.lang.String[] { "Schema", "Uri", "Text", "Md5", "Language", "Symbols", "Occurrences", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_Range_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_sourcegraph_semanticdb_kotlinc_Range_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_Range_descriptor,
        new java.lang.String[] { "StartLine", "StartCharacter", "EndLine", "EndCharacter", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_Signature_descriptor,
        new java.lang.String[] { "ClassSignature", "MethodSignature", "TypeSignature", "ValueSignature", "SealedValue", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_ClassSignature_descriptor,
        new java.lang.String[] { "TypeParameters", "Parents", "Declarations", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_MethodSignature_descriptor,
        new java.lang.String[] { "TypeParameters", "ParameterLists", "ReturnType", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_TypeSignature_descriptor,
        new java.lang.String[] { "TypeParameters", "LowerBound", "UpperBound", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_ValueSignature_descriptor,
        new java.lang.String[] { "Tpe", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolInformation_descriptor,
        new java.lang.String[] { "Symbol", "Language", "Kind", "Properties", "DisplayName", "Signature", "Access", "OverriddenSymbols", "Documentation", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_Access_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_sourcegraph_semanticdb_kotlinc_Access_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_Access_descriptor,
        new java.lang.String[] { "PrivateAccess", "PrivateWithinAccess", "ProtectedAccess", "PublicAccess", "SealedValue", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateAccess_descriptor,
        new java.lang.String[] { });
    internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_PrivateWithinAccess_descriptor,
        new java.lang.String[] { "Symbol", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_ProtectedAccess_descriptor,
        new java.lang.String[] { });
    internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_PublicAccess_descriptor,
        new java.lang.String[] { });
    internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_Documentation_descriptor,
        new java.lang.String[] { "Message", "Format", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_SymbolOccurrence_descriptor,
        new java.lang.String[] { "Range", "Symbol", "Role", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_Scope_descriptor,
        new java.lang.String[] { "Symlinks", "Hardlinks", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_Type_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_sourcegraph_semanticdb_kotlinc_Type_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_Type_descriptor,
        new java.lang.String[] { "TypeRef", "ExistentialType", "IntersectionType", "SealedValue", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_TypeRef_descriptor,
        new java.lang.String[] { "Symbol", "TypeArguments", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_IntersectionType_descriptor,
        new java.lang.String[] { "Types", });
    internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_sourcegraph_semanticdb_kotlinc_ExistentialType_descriptor,
        new java.lang.String[] { "Tpe", "Declarations", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
