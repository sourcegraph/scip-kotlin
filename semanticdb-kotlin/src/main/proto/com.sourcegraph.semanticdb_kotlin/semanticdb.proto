// Original source: https://github.com/scalameta/scalameta/blob/cf796cf2436b40494baf2bdc266623dc65264ad5/semanticdb/semanticdb/semanticdb.proto
// Local modifications:
// - Removes unused fields to minimize the amount of generated code.
// - Adds SymbolInformation.documentation that is pending upstream approval.

syntax = "proto3";

package com.sourcegraph.semanticdb_kotlinc;

option java_package = "com.sourcegraph.semanticdb_kotlinc";
option java_multiple_files = false;

enum Schema {
  LEGACY = 0;
  SEMANTICDB3 = 3;
  SEMANTICDB4 = 4;
}

message TextDocuments {
  repeated TextDocument documents = 1;
}

message TextDocument {
  reserved 4, 8, 9;
  Schema schema = 1;
  string uri = 2;
  string text = 3;
  string md5 = 11;
  Language language = 10;
  repeated SymbolInformation symbols = 5;
  repeated SymbolOccurrence occurrences = 6;
}

enum Language {
  UNKNOWN_LANGUAGE = 0;
  SCALA = 1;
  JAVA = 2;
  KOTLIN = 3;
}

message Range {
  int32 start_line = 1;
  int32 start_character = 2;
  int32 end_line = 3;
  int32 end_character = 4;
}

message Signature {
  oneof sealed_value {
    ClassSignature class_signature = 1;
    MethodSignature method_signature = 2;
    TypeSignature type_signature = 3;
    ValueSignature value_signature = 4;
  }
}

message ClassSignature {
  Scope type_parameters = 1;
  repeated Type parents = 2;
  Scope declarations = 4;
}

message MethodSignature {
  Scope type_parameters = 1;
  repeated Scope parameter_lists = 2;
  Type return_type = 3;
}

message TypeSignature {
  Scope type_parameters = 1;
  Type lower_bound = 2;
  Type upper_bound = 3;
}

message ValueSignature {
  Type tpe = 1;
}

message SymbolInformation {
  enum Kind {
    reserved 1, 2, 4, 5, 15, 16;
    UNKNOWN_KIND = 0;
    LOCAL = 19;
    FIELD = 20;
    METHOD = 3;
    CONSTRUCTOR = 21;
    TYPE = 7;
    PARAMETER = 8;
    TYPE_PARAMETER = 9;
    PACKAGE = 11;
    CLASS = 13;
    INTERFACE = 18;
  }
  enum Property {
    UNKNOWN_PROPERTY = 0;
    reserved 0x1;
    reserved 0x2;
    ABSTRACT = 0x4;
    FINAL = 0x8;
    SEALED = 0x10;
    STATIC = 0x1000;
    ENUM = 0x4000;
  }
  reserved 2, 6, 7, 8, 9, 10, 11, 12, 14, 15;
  string symbol = 1;
  Language language = 16;
  Kind kind = 3;
  int32 properties = 4;
  string display_name = 5;
  Signature signature = 17;
  Access access = 18;
  repeated string overridden_symbols = 19;
  Documentation documentation = 20;
}

message Access {
  oneof sealed_value {
    PrivateAccess private_access = 1;
    PrivateWithinAccess private_within_access = 3;
    ProtectedAccess protected_access = 4;
    PublicAccess public_access = 7;
  }
}

message PrivateAccess {}

message PrivateWithinAccess {
  string symbol = 1;
}

message ProtectedAccess {}

message PublicAccess {}

message Documentation {
  enum Format {
    HTML = 0;
    MARKDOWN = 1;
    JAVADOC = 2;
    SCALADOC = 3;
    KDOC = 4;
  }
  string message = 1;
  Format format = 2;
}

message SymbolOccurrence {
  enum Role {
    UNKNOWN_ROLE = 0;
    REFERENCE = 1;
    DEFINITION = 2;
  }
  Range range = 1;
  string symbol = 2;
  Role role = 3;
}

message Scope {
  repeated string symlinks = 1;
  repeated SymbolInformation hardlinks = 2;
}

message Type {
  reserved 1, 3, 4, 5, 6, 11, 12, 15, 16;
  oneof sealed_value {
    TypeRef type_ref = 2;
    ExistentialType existential_type = 9;
    IntersectionType intersection_type = 17;
  }
}

message TypeRef {
  string symbol = 2;
  repeated Type type_arguments = 3;
}

message IntersectionType {
  repeated Type types = 1;
}

message ExistentialType {
  reserved 2;
  Type tpe = 1;
  Scope declarations = 3;
}
